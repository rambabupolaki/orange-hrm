<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7744ec01-4049-49d5-8867-c4da7aaae32d" activeEnvironment="Default" name="ReactorCX-SoapUI-Selenium" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="${projectDir}" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Members-UpdateMember"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export JUnit Results with test properties" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="PhonenoUpdate"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="D:\ReactorCX\Reports"/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="ProjectSettings@hermesConfig">${#System#user.home}\.hermes</con:setting></con:settings><con:interface xsi:type="con:RestService" id="20f052fe-3bb8-4234-9720-01946748f14c" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://test-rle-api.herokuapp.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint></con:endpoints><con:resource name="Login" path="/api/v1/login" id="9d7786d3-2396-4f35-9d2d-d07aab9218a0"><con:settings/><con:parameters/><con:method name="Login" id="7ba0bd2a-b965-40fe-8148-1b6638dae8bd" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 404 422 400</con:status><con:params/><con:element xmlns:log="https://test-rle-api.herokuapp.com/api/v1/login">log:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:log="https://test-rle-api.herokuapp.com/api/v1/login">log:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>503 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Login" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username": "Starbucks/admin", "password": "123456"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="GetAllPrograms" path="/api/v1/programs" id="663872a0-fa9e-42e6-83f0-475f6d6f7408"><con:settings/><con:parameters><con:parameter><con:name>Body</con:name><con:value>{"customers": [{"firstName": "John","lastName": "Wesely","acquisitionChannel": "facebook","primary": "true"}]}</con:value><con:style>QUERY</con:style><con:default>{"customers": [{"firstName": "John","lastName": "Wesely","acquisitionChannel": "facebook","primary": "true"}]}</con:default></con:parameter></con:parameters><con:method name="Programs" id="d6112139-3693-4a0f-835c-4496f43af5ef" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:prog="https://test-rle-api.herokuapp.com/api/v1/programs">prog:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GetAllActivePrograms" id="42e3456c-b050-4ce1-9a09-5ba8dc680dec" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVMGV3YjA4aGZNTEJwN1JlOGVrdXp5aDNVRnlHSHRvMlp6ck9rL2ZuQks2ZWFNTS9MSU9YUGwvakErL3pYeGY1VHp5d3ZQYTRwZUlFTmdIVUxqUFluSmtqeGRVMDNJNjUzQWhsdUt0YjdTanI0SWdiMnhvZW5QQnVaWkkzZ3l4Rkh0dzRiR3BFVnJlVW9XajJJK21HcmpqNnhaNTRYMEhObHBuKzBiL0RYcUNjOFE9PSIsImV4cCI6MTQ4NDc1MTk4ODI1OCwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaSIsImlhdCI6MTQ4NDcyMzE4OH0.r3dKOuqwF-WPrFzja_dpy4hIdh-J7407re8BYpQNcGI" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/programs</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Body" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Body</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="InsertMemberPreferences" path="/Preferences" id="61121aa3-22b3-48a1-9c37-86a71c1f6270"><con:settings/><con:parameters/><con:method name="MemberPreferences" id="52179943-2ca7-4a55-9a8f-201c7236bcfc" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:tier="https://test-rle-api.herokuapp.com/api/v1/tierpolicies">tier:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="092d1781-ab6d-4e05-bb22-cb7655f34dfd" mediaType="application/json"><con:settings/><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="InvalidUrl" path="/InvalidUrl" id="1d51eec2-a925-4fe4-9549-5466c20f27ab"><con:settings/><con:parameters/><con:method name="InvalidUrl" id="00238274-f0e1-4d58-abda-4b5e6826b917" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:inv="https://test-rle-api.herokuapp.com/InvalidUrl">inv:Fault</con:element></con:representation><con:request name="Request 1" id="e2c4bb3b-1f3f-4a46-ac70-2238bc60726f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username": "Starbucks/admin", "password": "123456"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/InvalidUrl</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteMember" path="/api/v1/members/${#Project#memberId}" id="0cb11845-3dbd-48ee-ad72-0d0de78b2959"><con:settings/><con:parameters/><con:method name="DeleteMember" id="55be2e7a-6e94-43c0-a2e0-6990ee140532" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 500</con:status><con:params/><con:element xmlns:f3f="https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9">f3f:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="InternalServerError" path="/api/v1/members/" id="ebd878c0-a983-4df0-baa4-08b1ab114bf0"><con:settings/><con:parameters/><con:method name="InternalServerError" id="e3bc2f35-be5b-4144-a23f-f673ce89f07f" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:int="https://test-rle-api.herokuapp.com/InternalServerError">int:Fault</con:element></con:representation><con:request name="Request1" id="d7d930ea-bfc2-46a8-a4ad-73109eee9b30" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllMembersDetails" path="/api/v1/members/" id="3ec9c4d9-9bd6-4d6e-b107-887c713cb221"><con:settings/><con:parameters/><con:method name="GetAllMembersDetails" id="66e40241-01cb-49cd-bfcc-b6b9bcb5a6e3" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:mem="https://test-rle-api.herokuapp.com/members">mem:Fault</con:element></con:representation><con:request name="getMembers" id="ae878ec0-eeab-40d9-b4e2-b0fbbe83b819" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer abc" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateMemberDetails" path="/api/v1/members/${#Project#memberId}" id="ed51cc8d-5d99-4b2c-beb4-f0c955a0a633"><con:settings/><con:parameters/><con:method name="UpdateMemberDetails" id="7001c3c8-1efc-4e9c-9825-8937ac532e8c" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:f3f="https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9">f3f:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>500 404 401 422 403</con:status><con:params/><con:element xmlns:f3f="https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9">f3f:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UpdateMemberDetails" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"_id": "${#Project#memberId}",
"firstName": "Ram",
"createdAt": "2017-01-19T09:16:36.025Z"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="CreateMembers" path="/api/v1/members" id="7bf33d0c-bf51-4f1b-ada1-52251aafdded"><con:settings/><con:parameters/><con:method name="CreateMembers" id="da74aa60-5334-4c3d-83b2-342d06dbddb7" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 400 422 500 404 403</con:status><con:params/><con:element xmlns:mem="https://test-rle-api.herokuapp.com/api/v1/members">mem:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:mem="https://test-rle-api.herokuapp.com/api/v1/members">mem:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="CreateMembers" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "number": "",
  "enrollDate": "2017-01-20T08:53:43.299Z",
  "enrollChannel": "Web",
  "referrals": [],
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "status": "Active",
  "program": "587dbc4a493f500004e86b7c",
  "type": "Individual",
  "uuid": "fa2c8010-de27-11e6-926d-c7defba",
  "firstName": "Harley",
  "lastName": "David",
  "acquisitionDate": "2017-01-20T07:47:23.395Z",
  "acquisitionChannel": "Web",
  "dob": null,
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "David1",
      "_id": "688083f3fde7a00004855sss",
      "createdAt": "2017-01-20T09:16:36.025Z",
      "updatedAt": "2017-01-20T07:56:50.579Z",
      "createdBy": "587da3c9613e4c5cfefd109a",
      "updatedBy": "587da3c9613e4c5cfefd109a"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreatePrograms" path="/api/v1/Programs" id="490b5938-ec65-4466-988e-b3322249303b"><con:settings/><con:parameters/><con:method name="createPrograms" id="4b47b4b4-f7fc-4d76-864f-a85cdfd172da" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>500 404 401 403 422</con:status><con:params/><con:element xmlns:prog="https://test-rle-api.herokuapp.com/Programs">prog:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:prog="https://test-rle-api.herokuapp.com/Programs">prog:Response</con:element></con:representation><con:request name="createPrograms" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Program#name}",
    "version":0,
    "createdAt":"${Program#createdAt}",
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdatePrograms" path="/api/v1/Programs/${#Project#programId}" id="33ef0738-8c0f-41ec-8ff6-e9066d1e7119"><con:settings/><con:parameters/><con:method name="updatePrograms" id="26978e1a-e019-42c0-83e2-f5a9388c472e" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>500 404 401 403 422</con:status><con:params/><con:element xmlns:prog="https://test-rle-api.herokuapp.com/Programs/">prog:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:prog="https://test-rle-api.herokuapp.com/Programs/">prog:Response</con:element></con:representation><con:request name="updatePrograms" id="6e644ee6-117d-4820-872d-c15b62ee6b34" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Program#programName}",
    "version":0
    
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs/prgIMfwg</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeletePrograms" path="/api/v1/Programs/${#Project#programId}" id="2a2ac832-ea53-478b-9f26-e8b4acca0774"><con:settings/><con:parameters/><con:method name="deletePrograms" id="46f5348c-82ec-4ab4-b3ed-1106f837ec7c" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>500 401 403</con:status><con:params/><con:element xmlns:prog="https://test-rle-api.herokuapp.com/Programs/">prog:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="deletePrograms" id="f325b37e-4b1f-42b0-a995-047ff4cdab72" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/Programs/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetMember" path="/api/v1/members/${#Project#MemberID}" id="8b062ef8-cbe3-4a14-8bbd-51ea0c210a95"><con:settings/><con:parameters/><con:method name="GetMember" id="8657412d-9ef9-4488-a6d1-de141c2746ed" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 404 500</con:status><con:params/><con:element xmlns:test="https://test-rle-api.herokuapp.com/">test:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:bc6="https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465">bc6:Response</con:element></con:representation><con:request name="GetMember" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="InvalidHttpMethod" path="/api/v1/members" id="29497a9c-259b-4653-97a8-23f6847bc6f2"><con:settings/><con:parameters/><con:method name="StatusCode404" id="055b1197-5c37-40d9-9b8e-b39078199fce" method="TRACE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="StatusCode404" id="1999b22d-3792-41fd-9486-457c5243fb75" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/StatusCode503</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteUsers" path="/api/v1/users/${#Project#userid}" id="b31b9b33-8077-44d6-9784-0113fdd81c13"><con:settings/><con:parameters/><con:method name="DeleteUsers" id="28d35acd-382b-4cbc-adda-9bf285b92192" method="DELETE"><con:settings/><con:parameters/><con:request name="DeleteUsers" id="684bf89d-98b9-44eb-89ef-7fdba813328f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllUsers" path="/api/v1/users" id="f04191ce-8d99-4f89-b847-f7af7f098619"><con:settings/><con:parameters/><con:method name="GetAllUsers" id="bc5c18df-0a1f-4efa-868f-e455627f93ee" method="GET"><con:settings/><con:parameters/><con:request name="GetAllUsers" id="4fbcd755-50c2-42d1-be95-db67412b3a21" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetMyAccountDetails" path="api/v1/Myaccount" id="87030eb7-0274-4cc0-936e-85d21a7fa3ef"><con:settings/><con:parameters/><con:method name="GetMyAccountDetails" id="539e46b4-02a7-4d18-8e4a-8ef6ef380d9c" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="4fecdd76-3279-4666-a9b6-65624dae03b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="ResetPassword" path="/api/v1/reset-password" id="eb8b754a-f23a-4c67-984a-5540b6120536"><con:settings/><con:parameters/><con:method name="ResetPassword" id="61dcd6ed-a485-4927-b108-6c147f24d5a3" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="ResetPassword" id="d090079a-d5fc-429a-8b2b-56d6d329f0ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username":"Starbucks/","emailid":""}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreateUser" path="/api/v1/users" id="cf110013-dd77-43a1-86f0-4029e2751410"><con:settings/><con:parameters/><con:method name="CreateUser" id="49d44973-d38c-4cb3-b3c7-6c94fd9a3ea7" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422 500</con:status><con:params/><con:element xmlns:user="https://test-rle-api.herokuapp.com/api/v1/users">user:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:user="https://test-rle-api.herokuapp.com/api/v1/users">user:Response</con:element></con:representation><con:request name="createUser" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#org}",
  "login": "${#Project#login}",
  "email": "${#Project#emailID}"
  
  
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateUser" path="/api/v1/users/${#Project#userid}" id="cf110013-dd77-43a1-86f0-4029e2751410"><con:settings/><con:parameters/><con:method name="UpdateUserDetails" id="49d44973-d38c-4cb3-b3c7-6c94fd9a3ea7" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404 422 500</con:status><con:params/><con:element xmlns:user="https://test-rle-api.herokuapp.com/api/v1/users/">user:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:user="https://test-rle-api.herokuapp.com/api/v1/users/">user:Response</con:element></con:representation><con:request name="updateUserDetails" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#project#org}",
  "login": "${#project#login}",
  "email": "${#project#emailID}",
  "blocked": false,
  "tokenExpirationTime": 480,
  "sessMgmtFlag": true,
  "sessMultiFlag": true
  
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteUser" path="/api/v1/users/${#Project#userid}" id="cf110013-dd77-43a1-86f0-4029e2751410"><con:settings/><con:parameters/><con:method name="DeleteUser" id="49d44973-d38c-4cb3-b3c7-6c94fd9a3ea7" method="DELETE"><con:settings/><con:parameters/><con:request name="DeleteUser" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetUserByID" path="/api/v1/users/${#Project#userid}" id="87030eb7-0274-4cc0-936e-85d21a7fa3ef"><con:settings/><con:parameters/><con:method name="GetUserByID" id="539e46b4-02a7-4d18-8e4a-8ef6ef380d9c" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:aa8="https://test-rle-api.herokuapp.com/api/v1/users/58aa836ec6918e0004306d56">aa8:Response</con:element></con:representation><con:request name="GetUserByID" id="4fecdd76-3279-4666-a9b6-65624dae03b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetOrgs" path="/api/v1/orgs" id="73c535eb-ab67-4d38-8cbb-740823456cf5"><con:settings/><con:parameters/><con:method name="GetOrgs" id="5b79480a-f86e-4262-8ffe-d988cd11ec3d" method="GET"><con:settings/><con:parameters/><con:request name="GetOrgs" id="50598de8-c1c9-4047-8c9a-f8f546ac068b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer  ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreateSegments" path="/api/v1/segments" id="8254b7c1-6b69-4ef0-af0d-3b7491e851d6"><con:settings/><con:parameters/><con:method name="CreateSegments" id="f826037c-bf02-4483-af55-e91c85d1c947" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:seg="https://test-rle-api.herokuapp.com/api/v1/segments">seg:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:seg="https://test-rle-api.herokuapp.com/api/v1/segments">seg:Response</con:element></con:representation><con:request name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "description":"${#Project#description}",
    "type": "${#Project#type}",
    "effectiveDate": "2017-02-08T20:44:54.933Z",
    "expirationDate": "2018-03-04T19:00:45.402Z",
    "org": "587da3c9613e4c5cfefd109b"
 
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateSegments" path="/api/v1/segments/${#Project#segmentid}" id="d1bcb0b5-8c85-45b8-9e97-45cf2d84b995"><con:settings/><con:parameters/><con:method name="UpdateSegments" id="d54e4b5f-fc27-4b31-91fb-afdb83885bde" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 500</con:status><con:params/><con:element xmlns:seg="https://test-rle-api.herokuapp.com/api/v1/segments/">seg:Fault</con:element></con:representation><con:request name="UpdateSegments" id="0e48db71-8b4d-4ebf-895d-19b7d3fb44e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "description": "${#Project#description}",
    "type": "${#Project#type}",
    "effectiveDate": "2017-02-08T20:44:54.933Z",
    "expirationDate": "2018-03-04T19:00:45.402Z",
    "org": "587da3c9613e4c5cfefd109b"
    
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteSegments" path="/api/v1/segments/${#Project#segmentid}" id="cd5a6cbb-b501-4f90-84f8-2847f83ac00e"><con:settings/><con:parameters/><con:method name="DeleteSegments" id="cb820a8f-d0a0-4c27-85db-15073daaea03" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="DeleteSegments" id="62a30b33-44b5-4421-bab2-8985983e297e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetSegmentbyID" path="/api/v1/segments/${#Project#segmentid}" id="8254b7c1-6b69-4ef0-af0d-3b7491e851d6"><con:settings/><con:parameters/><con:method name="GetSegments" id="f826037c-bf02-4483-af55-e91c85d1c947" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:abc="https://test-rle-api.herokuapp.com/api/v1/segments/58abc85bcae5f70004f45d7d">abc:Response</con:element></con:representation><con:request name="GetSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreateLocation" path="/api/v1/locations" id="a8e4260c-d067-4767-8645-8a41a9202958"><con:settings/><con:parameters/><con:method name="CreateLocation" id="014dd394-51dd-4418-9be4-1f17736ed8d4" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:loc="https://test-rle-api.herokuapp.com/api/v1/locations">loc:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:loc="https://test-rle-api.herokuapp.com/api/v1/locations">loc:Fault</con:element></con:representation><con:request name="CreateLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "Hyath",
    "desc": "attitude-oriented",
    "city": "West Lisandroport",
    "state": "Montana",
    "country": "LB",
    "zipCode": "38224-3646",
    "timeZone": "UTC",
    "number": "9228",
    "org": "587da3c9613e4c5cfefd109b"
   
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetLocationbyID" path="/api/v1/locations/${#Project#locationid}" id="a8e4260c-d067-4767-8645-8a41a9202958"><con:settings/><con:parameters/><con:method name="GetLocation" id="014dd394-51dd-4418-9be4-1f17736ed8d4" method="GET"><con:settings/><con:parameters/><con:request name="GetLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateLocation" path="/api/v1/locations/${#Project#locationid}" id="a8e4260c-d067-4767-8645-8a41a9202958"><con:settings/><con:parameters/><con:method name="UpdateLocation" id="014dd394-51dd-4418-9be4-1f17736ed8d4" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ad5="https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194">ad5:Response</con:element></con:representation><con:request name="UpdateLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "Hyath",
    "desc": "attitude-oriented",
    "city": "West Lisandroport",
    "state": "Montana",
    "country": "LB",
    "zipCode": "38224-3646",
    "timeZone": "UTC",
    "number": "9228",
    "org": "587da3c9613e4c5cfefd109b"
   
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteLocation" path="/api/v1/locations/${#Project#locationid}" id="a8e4260c-d067-4767-8645-8a41a9202958"><con:settings/><con:parameters/><con:method name="DeleteLocation" id="014dd394-51dd-4418-9be4-1f17736ed8d4" method="DELETE"><con:settings/><con:parameters/><con:request name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreateProducts" path="/api/v1/products" id="2f6dcc9e-9140-4e9a-90a6-81868f13a094"><con:settings/><con:parameters/><con:method name="CreateProducts" id="238502e2-fc75-4ef9-a136-3c4ab758d32c" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:prod="https://test-rle-api.herokuapp.com/api/v1/products">prod:Fault</con:element></con:representation><con:request name="CreateProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "Table mate",
    "desc": "Ergonomic Steel Towels",
    "cost": 644,
    "category": "Cotton",
    "subcategory": "Generic",
    "style": "plum",
    "sku": "1",
    "org": "587da3c9613e4c5cfefd109b"
   
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllProducts" path="/api/v1/products" id="2f6dcc9e-9140-4e9a-90a6-81868f13a094"><con:settings/><con:parameters/><con:method name="GetAllProducts" id="238502e2-fc75-4ef9-a136-3c4ab758d32c" method="GET"><con:settings/><con:parameters/><con:request name="GetAllProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllLocations" path="/api/v1/locations" id="a8e4260c-d067-4767-8645-8a41a9202958"><con:settings/><con:parameters/><con:method name="GetAllLocations" id="014dd394-51dd-4418-9be4-1f17736ed8d4" method="GET"><con:settings/><con:parameters/><con:request name="GetAllLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllSegments" path="/api/v1/segments" id="8254b7c1-6b69-4ef0-af0d-3b7491e851d6"><con:settings/><con:parameters/><con:method name="GetAllSegments" id="f826037c-bf02-4483-af55-e91c85d1c947" method="GET"><con:settings/><con:parameters/><con:request name="GetAllSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetProductbyID" path="/api/v1/products/${#Project#productid}" id="2f6dcc9e-9140-4e9a-90a6-81868f13a094"><con:settings/><con:parameters/><con:method name="GetProductbyID" id="238502e2-fc75-4ef9-a136-3c4ab758d32c" method="GET"><con:settings/><con:parameters/><con:request name="GetProductbyID" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateProducts" path="/api/v1/products/${#Project#productid}" id="2f6dcc9e-9140-4e9a-90a6-81868f13a094"><con:settings/><con:parameters/><con:method name="UpdateProducts" id="238502e2-fc75-4ef9-a136-3c4ab758d32c" method="PUT"><con:settings/><con:parameters/><con:request name="UpdateProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "Table mate",
    "desc": "Ergonomic Steel Towels",
    "cost": 644,
    "category": "Cotton",
    "subcategory": "Generic",
    "style": "plum",
    "sku": "1",
    "org": "587da3c9613e4c5cfefd109b"
   
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteProducts" path="/api/v1/products/${#Project#productid}" id="2f6dcc9e-9140-4e9a-90a6-81868f13a094"><con:settings/><con:parameters/><con:method name="DeleteProducts" id="238502e2-fc75-4ef9-a136-3c4ab758d32c" method="DELETE"><con:settings/><con:parameters/><con:request name="DeleteProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllDMAs" path="/api/v1/dmas" id="8cbdf09a-dcb7-422b-b9cb-1225b8fbbf10"><con:settings/><con:parameters/><con:method name="GetAllDMAs" id="fb75e4e9-aa4b-4619-b89b-dfb18e6c1dd8" method="GET"><con:settings/><con:parameters/><con:request name="GetAllDMAs" id="65f49703-352e-492a-8442-19f4a1560c9c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreateDMA" path="/api/v1/dmas" id="8cbdf09a-dcb7-422b-b9cb-1225b8fbbf10"><con:settings/><con:parameters/><con:method name="CreateDMA" id="fb75e4e9-aa4b-4619-b89b-dfb18e6c1dd8" method="POST"><con:settings/><con:parameters/><con:request name="CreateDMA" id="65f49703-352e-492a-8442-19f4a1560c9c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "name": "NewDMA",
  "desc": "Null",
  "zipCodes": [
    "35432"
  
  ],
  "org": "587da3c9613e4c5cfefd109b"
  
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateDMA" path="/api/v1/dmas/${#Project#dmaid}" id="8cbdf09a-dcb7-422b-b9cb-1225b8fbbf10"><con:settings/><con:parameters/><con:method name="UpdateDMA" id="fb75e4e9-aa4b-4619-b89b-dfb18e6c1dd8" method="PUT"><con:settings/><con:parameters/><con:request name="UpdateDMA" id="65f49703-352e-492a-8442-19f4a1560c9c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "name": "NewDMA",
  "desc": "Null",
  "zipCodes": [
    "35432"
  
  ],
  "org": "587da3c9613e4c5cfefd109b"
  
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteDMA" path="/api/v1/dmas/${#Project#dmaid}" id="8cbdf09a-dcb7-422b-b9cb-1225b8fbbf10"><con:settings/><con:parameters/><con:method name="DeleteDMA" id="fb75e4e9-aa4b-4619-b89b-dfb18e6c1dd8" method="PUT"><con:settings/><con:parameters/><con:request name="DeleteDMA" id="65f49703-352e-492a-8442-19f4a1560c9c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetDMAbyID" path="/api/v1/dmas/${#Project#dmaid}" id="8cbdf09a-dcb7-422b-b9cb-1225b8fbbf10"><con:settings/><con:parameters/><con:method name="GetDMAbyID" id="fb75e4e9-aa4b-4619-b89b-dfb18e6c1dd8" method="GET"><con:settings/><con:parameters/><con:request name="GetDMAbyID" id="65f49703-352e-492a-8442-19f4a1560c9c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetAllEnums" path="/api/v1/enums" id="3ecabe63-3ccf-488e-878b-510c4d2038a7"><con:settings/><con:parameters/><con:method name="GetAllEnums" id="5f99c025-45da-40f8-915b-c744da379a02" method="GET"><con:settings/><con:parameters/><con:request name="GetAllEnums" id="b87ef34d-65b9-4410-b743-e4b381d63194" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="GetEnumbyID" path="/api/v1/enums/${#Project#enumid}" id="3ecabe63-3ccf-488e-878b-510c4d2038a7"><con:settings/><con:parameters/><con:method name="GetEnumbyID" id="5f99c025-45da-40f8-915b-c744da379a02" method="GET"><con:settings/><con:parameters/><con:request name="GetEnumbyID" id="b87ef34d-65b9-4410-b743-e4b381d63194" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UpdateEnumbyID" path="/api/v1/enums/${#Project#enumid}" id="3ecabe63-3ccf-488e-878b-510c4d2038a7"><con:settings/><con:parameters/><con:method name="UpdateEnumbyID" id="5f99c025-45da-40f8-915b-c744da379a02" method="PUT"><con:settings/><con:parameters/><con:request name="UpdateEnumbyID" id="b87ef34d-65b9-4410-b743-e4b381d63194" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request> {
    "type": "AccrualActivity",
    "lang": "ca",
    "value": "Bonus",
    "label": "English",
    "displayType": "user",
    "org": "587da3c9613e4c5cfefd109b"
 }
    </con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="DeleteEnumbyID" path="/api/v1/enums/${#Project#enumid}" id="3ecabe63-3ccf-488e-878b-510c4d2038a7"><con:settings/><con:parameters/><con:method name="DeleteEnumbyID" id="5f99c025-45da-40f8-915b-c744da379a02" method="DELETE"><con:settings/><con:parameters/><con:request name="DeleteEnumbyID" id="b87ef34d-65b9-4410-b743-e4b381d63194" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="CreateEnums" path="/api/v1/enums" id="3ecabe63-3ccf-488e-878b-510c4d2038a7"><con:settings/><con:parameters/><con:method name="CreateEnums" id="5f99c025-45da-40f8-915b-c744da379a02" method="POST"><con:settings/><con:parameters/><con:request name="CreateEnums" id="b87ef34d-65b9-4410-b743-e4b381d63194" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request> {
    "type": "AccrualActivity",
    "lang": "ca",
    "value": "Bonus",
    "label": "English",
    "displayType": "user",
    "org": "587da3c9613e4c5cfefd109b"
 }
    </con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-CreateRewardPolicy" path="/api/v1/rewardpolicies" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="CreateRewardPolicies" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:rew="https://test-rle-api.herokuapp.com/api/v1/rewardpolicies">rew:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422 500</con:status><con:params/><con:element xmlns:rew="https://test-rle-api.herokuapp.com/api/v1/rewardpolicies">rew:Fault</con:element></con:representation><con:request name="CreateRewardPolicies" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{  
	"name": "${#Project#rewardName}",
    "program":"${#Project#programId}",
    "org": "587da3c9613e4c5cfefd109b",
    "expirationHours":168,
    "expirationSnapTo":"day"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewardpolicies</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-UpdateRewardPolicy" path="/api/v1/rewardpolicies/${#Project#rewardpolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="UpdateRewardPolicies" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="PUT"><con:settings/><con:parameters/><con:request name="UpdateRewardPolicies" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetAllRewardPolicies" path="/api/v1/rewardpolicies" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetAllRewardPolicies" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:request name="GetAllRewardPolicies" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetRewardPolicyByID" path="/api/v1/rewardpolicies/${#Project#rewardpolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetAllRewardPolicies" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:request name="GetAllRewardPolicies" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-CreateTierPolicy" path="/api/v1/tierpolicies" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="CreateTierPolicy" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:tier="https://test-rle-api.herokuapp.com/api/v1/tierpolicies">tier:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:tier="https://test-rle-api.herokuapp.com/api/v1/tierpolicies">tier:Response</con:element></con:representation><con:request name="CreateTierPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-UpdateTierPolicyByID" path="/api/v1/tierpolicies/${#Project#tierpolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="UpdateTierPolicy" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:request name="UpdateTierPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-DeleteTierPolicyByID" path="/api/v1/tierpolicies/${#Project#tierpolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="DeleteTierPolicy" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:request name="DeleteTierPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetAllTierPolicies" path="/api/v1/tierpolicies" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetAllTierPolicy" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:request name="GetAllTierPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetTierPolicyByID" path="/api/v1/tierpolicies/${#Project#tierpolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetTierPolicyByID" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:request name="GetTierPolicyByID" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-DeleteRewardPolicyByID" path="/api/v1/rewardpolicies/${#Project#rewardpolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="DeleteRewardPolicy" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="PUT"><con:settings/><con:parameters/><con:request name="DeleteRewardPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-CreatePursePolicies" path="/api/v1/pursepolicies" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="CreatePursePolicies" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422 500 401</con:status><con:params/><con:element xmlns:pur="https://test-rle-api.herokuapp.com/api/v1/pursepolicies">pur:Fault</con:element></con:representation><con:request name="CreatePursePolicies" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{   "name":"${#Project#purseName}",
    "desc": "Free drink or food item",
    "activityBasedExpiration": "false",
    "expirationSnapTo": "day",
    "program":"${#Project#programId}",
    "org": "58b513e617b7207a6f546264"
  }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/pursepolicies</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-UpdatePursePolicyByID" path="/api/v1/rewardpolicies/${#Project#pursepolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="UpdatePursePolicyByID" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="PUT"><con:settings/><con:parameters/><con:request name="UpdatePursePolicyByID" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-DeletePursePolicyByID" path="/api/v1/rewardpolicies/${#Project#pursepolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="DeletePursePolicyByID" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="DELETE"><con:settings/><con:parameters/><con:request name="DeletePursePolicyByID" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetAllPursePolicies" path="/api/v1/pursepolicies" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetAllPursePolicies" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GetAllPursePolicies" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/pursepolicies</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetPursePolicyByID" path="/api/v1/pursepolicies/${#Project#pursepolicyid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetPursePolicyByID" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GetPursePolicyByID" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/pursepolicies/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-CreatePartners" path="/api/v1/partners" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="CreatePartners" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="POST"><con:settings/><con:parameters/><con:request name="CreatePartners" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-UpdatePartners" path="/api/v1/partners/${#Project#partnerid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="UpdatePartners" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="PUT"><con:settings/><con:parameters/><con:request name="UpdatePartners" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-DeletePartners" path="/api/v1/partners/${#Project#partnerid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="DeletePartners" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="DELETE"><con:settings/><con:parameters/><con:request name="DeletePartners" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetPartnerByID" path="/api/v1/partners/${#Project#partnerid}" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetPartnerByID" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:request name="GetPartnerByID" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Programs-GetAllPartners" path="/api/v1/partners/" id="b47b9781-555f-4ef4-a54f-3129dad19d53"><con:settings/><con:parameters/><con:method name="GetAllPartners" id="8f0e200e-4975-4318-9e00-e6bb49760ab9" method="GET"><con:settings/><con:parameters/><con:request name="GetAllPartners" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="rules" path="/api/v1/rules/587da40e44d8ea5d32e80fdd" id="471255ac-2e61-473e-a768-e9c2bb3e517e"><con:settings/><con:parameters/><con:method name="Method 1" id="a86f7d8a-0fbb-4316-90c0-9961df704785" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 500</con:status><con:params/><con:element xmlns:rul="https://test-rle-api.herokuapp.com/api/v1/rules">rul:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rul="https://test-rle-api.herokuapp.com/api/v1/rules">rul:Response</con:element></con:representation><con:request name="GetAllRules" id="3ece83b4-8d21-4374-813b-476c53fa7f53" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rules</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Read all Rewards" path="/api/v1/rewards" id="8aedc007-ac2d-4bde-afe8-485fc64653f9"><con:settings/><con:parameters/><con:method name="Read All Rewards" id="42cd094a-ce9f-4b24-904e-9abb36772f39" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:afe7="https://test-rle-api.herokuapp.com/api/v1/rewards/58afe73731f8ef000467ac1c">afe7:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Read All Rewards" id="ae942974-9ad7-400c-81fe-0f23cbc8ed88" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Add Rewards to a Member" path="/api/v1/rewards" id="94c37faa-0dcb-408c-8f52-7296214101fe"><con:settings/><con:parameters/><con:method name="Add Rewards" id="27c0a743-0619-4541-9687-40250dfe3c1e" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422 404</con:status><con:params/><con:element xmlns:rew="https://test-rle-api.herokuapp.com/api/v1/rewards">rew:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:rew="https://test-rle-api.herokuapp.com/api/v1/rewards">rew:Response</con:element></con:representation><con:request name="Request 1" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"member":"58b3ba731a470e0004ecd624",
"effectiveDate":"2017-02-27T05:35:00.000Z",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"58b3b8b51a470e0004ecd16e",
"usesLeft":1,
"name":"Free Item",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Read Rewards by Id" path="/api/v1/rewards/${#Project#memRewardId}" id="2875aad0-d12d-44de-b9cb-bedfeb4ad095"><con:settings/><con:parameters/><con:method name="Read Reward by Id" id="3e18b1bf-1818-44f6-9eeb-365ce269d7c6" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:b3c="https://test-rle-api.herokuapp.com/api/v1/rewards/58b3ce6b1a470e0004ecd657">b3c:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:b3c="https://test-rle-api.herokuapp.com/api/v1/rewards/58b3ce6b1a470e0004ecd657">b3c:Response</con:element></con:representation><con:request name="Request 1" id="4408524a-2b5c-4253-887f-9e47ba6b2411" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Update Member Rewards" path="/api/v1/rewards/${#Project#memRewardId}" id="11ac475d-ff07-448f-8696-d6f1e4ed17a7"><con:settings/><con:parameters><con:parameter><con:name>#Project#memRewardId</con:name><con:value>#Project#memRewardId</con:value><con:style>TEMPLATE</con:style><con:default>#Project#memRewardId</con:default></con:parameter></con:parameters><con:method name="Update Member Reward" id="5501cf1a-5dac-4f62-ac80-be36adf4eb4f" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 500</con:status><con:params/><con:element xmlns:b3c="https://test-rle-api.herokuapp.com/api/v1/rewards/58b3cf5d1a470e0004ecd667">b3c:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:b3c="https://test-rle-api.herokuapp.com/api/v1/rewards/58b3cf5d1a470e0004ecd667">b3c:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="134889a7-1bd8-4786-b0ff-400346a1adce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"2017-02-27T05:35:00.000Z",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":5,
"name":"Free Item",
"desc":"free item desc",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3cf5d1a470e0004ecd667</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Delete Member Rewards" path="/api/v1/rewards/${#Project#memRewardId}" id="292f0523-dbf8-4608-9e72-6e635ab75a8a"><con:settings/><con:parameters><con:parameter><con:name>#Project#memRewardId</con:name><con:value>#Project#memRewardId</con:value><con:style>TEMPLATE</con:style><con:default>#Project#memRewardId</con:default></con:parameter></con:parameters><con:method name="Delete Member Reward" id="cf6c686c-dc32-4ae9-a1a3-f9da28cf6f03" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e8549401-4857-437d-a325-bebbc326dee3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="LoyaltyID" path="/api/v1/members/${#Project#memberId}" id="b95c6721-cb2e-4831-8214-8d0cdf751c07"><con:settings/><con:parameters/><con:method name="Add/Update/Delete LoyaltyID" id="2fbb0b67-cd85-46d4-b89d-da3e2e82154b" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 403 500 422 400</con:status><con:params/><con:element xmlns:b92="https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed">b92:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:b92="https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed">b92:Response</con:element></con:representation><con:request name="Request 1" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    },
      {
        "name": "SVC",
        "code": "wehtgrc"
        
      }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="1f9f9a2c-220a-4cc9-8bc5-468f3111c61a" name="ValidateLogin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="093df9dd-f65f-4210-8e50-1a072998a7de" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidLoginCredentials" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="4dfac50c-e024-46af-8a88-a75fa5f9ea8f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/login" methodName="Login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username": "${#Project#userName}", "password": "${#Project#password}"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:assertion type="JsonPath Count" id="306b1f29-ed7f-4461-bc80-c17672ce1f75" name="JsonPath Count"><con:configuration><path>.token</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferToken" id="0057404d-6890-4fee-888b-950123758032"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>tokenID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>token</con:sourcePath><con:targetType>tokenID</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Printing Token" id="9aca347d-10cd-4142-8dde-8b1a4a8bcda4"><con:settings/><con:config><script>def testCaseProperty = testRunner.testCase.testSuite.project.getPropertyValue( "tokenid" )
log.info("Token Generated : "+testCaseProperty)
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="15e052b0-4266-429b-955d-70c5f3ec4687" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InValidLoginCredentials" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="95c6ed60-2f27-4d47-9bd2-50e220660436"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/login" methodName="Login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username": "${#Project#userName}", "password": "Apitesting12"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="851fc52f-93bd-4f81-9905-c07b48b9e146" name="Valid HTTP Status Codes"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>tokenID</con:name><con:value>[eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVMGV3YjA4aGZNTEJwN1JlOGVrdXp5aDNVRnlHSHRvMlp6ck9rL2ZuQks2ZWFNTS9MSU9YUGwvakErL3pYeGY1VHp5d3ZQYTRwZUlFTmdIVUxqUFluSmtqeGRVMDNJNjUzQWhsdUt0YjdTanI0SWdiMnhvZW5QQnVaWkkzZ3l4Rkh0dzRiR3BFVnJlVW9XajJJK21HcmpqNnhaNTRYMEhObHBuKzBiL0RYcUNidUY0PSIsImV4cCI6MTQ4NTc5OTY5OTYyOSwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaSIsImlhdCI6MTQ4NTc3MDg5OX0.pbOOmP8DbkM7JleIN_11qZ6UABu4qzstuT8ebSTUMIo]</con:value></con:property></con:properties></con:testSuite><con:testSuite id="9a1a86e2-85bb-4318-b3b7-ccb0cc68b59d" name="Programs-Create Program"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ec8044c1-2f10-462b-b97a-2799509a4df9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProgram" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="06943053-aedb-44da-89d5-3784fd2d67e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status


//testRunner.testCase.setName(caseName+"skip");

def tc = testRunner.testCase.testSuite.project.testSuites['ValidateLogin'].testCases['ValidLoginCredentials']

def runner = tc.run(null, false )
//testRunner.testCase.setName(caseName);

assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="aa64552e-9efd-44e0-bcdb-e6b3736a8708"><con:settings/><con:config><script>def pn = "prg"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def programName = pn+randomValue
log.info(programName)
testRunner.testCase.testSuite.project.setPropertyValue( "programName", programName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProgram" id="52ec54d9-2a2f-4f39-998f-aafc8de3c74f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs" methodName="createPrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProgram" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#programName}",
    "org": "${#Project#orgId}"
    
}
  </con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:assertion type="JsonPath Match" id="ad0d23a2-1c1c-498f-9488-e51c7524ccfb" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#programName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="bf9c7986-abb5-4eb3-b461-9d510fa536d7" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="070524dc-fdbf-4960-97e7-33d2a9a2cd5d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>programId</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>name</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>name</con:sourcePath><con:targetType>programName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>org</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>org</con:sourcePath><con:targetType>orgId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="5b805868-7920-453d-ba5e-cfea7854376e" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tokenid</con:name><con:value>[eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVMGV3YjA4aGZNTEJwN1JlOGVrdXp5aDNVRnlHSHRvMlp6ck9rL2ZuQks2ZWFNTS9MSU9YUGwvakErL3pYeGY1VHp5d3ZQYTRwZUlFTmdIVUxqUFluSmtqeGRVMDNJNjUzQWhsdUt0YjdTanI0SWdiMnhvZW5QQnVaWkkzZ3l4Rkh0dzRiR3BFVnJlVW9XajJJK21HcmpqNnhaNTRYMEhObHBuKzBiL0RYcUNjOFE9PSIsImV4cCI6MTQ4NDc2MTkxMzk1OSwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaSIsImlhdCI6MTQ4NDczMzExM30.NPx3F-ueBO9enVdYrQA_ISMLONneUb2HChANpl_2V5o]</con:value></con:property></con:properties></con:testCase><con:testCase id="d785b02b-d475-4966-bfc1-21e27052846e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProgram-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="bffc2758-732a-47cf-913b-00679985eac0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="07627869-b0b9-4015-b79c-cd0c416dbb24"><con:settings/><con:config><script>def name ="pr"   //declaring variable

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def programName = name+randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "programName", programName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProgram" id="f041913f-aa03-4737-a57c-5f7688434154"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs" methodName="createPrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProgram" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#programName}",
    "org": "${#Project#orgId}"
    
}
  </con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:assertion type="JsonPath Match" id="ad0d23a2-1c1c-498f-9488-e51c7524ccfb" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#programName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="bf9c7986-abb5-4eb3-b461-9d510fa536d7" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferProgramId" id="a3d8caf8-aec9-42c4-845e-3adec02a5b46"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>programId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>programId</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>organisationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>org</con:sourcePath><con:targetType>orgId</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="550174c2-b050-4bb5-aa7f-ac2a1bb55f83"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="302aed16-429d-403c-afba-428b70d1eb67" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProgram-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="0071b3a1-72c6-418a-89b1-40ecc2b04f86"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="fcea6a6f-e3c1-4919-b9df-80df442fc0be"><con:settings/><con:config><script>def name ="pr"   //initializing the variable
def desc ="desc"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def programName = name+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 10 )
def programDesc = desc+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "programName", programName )
testRunner.testCase.testSuite.project.setPropertyValue( "programDesc", programDesc )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProgram" id="5aaa30f5-6a39-433a-a71c-6a78bceefb61"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs" methodName="createPrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProgram" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#programName}",
    "org": "${#Project#orgId}"
    
}
  </con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:assertion type="JsonPath Match" id="ad0d23a2-1c1c-498f-9488-e51c7524ccfb" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#programName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="bf9c7986-abb5-4eb3-b461-9d510fa536d7" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferProgramId" id="f1b09a87-b0b9-4398-9fa8-7d9e36e50744"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>programId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>programId</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="36927389-cdf3-4bc4-b5db-cd35561ab035"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c582866c-62f9-41ef-a220-cea19869dc08" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProgram-Duplicate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="38932b6c-e1be-4157-b15f-48694e4e15bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="1a9c2d9e-f846-409c-a0fb-18312b33abde"><con:settings/><con:config><script>def name ="pr"   //declaring variable

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def programName = name+randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "programName", programName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProgram" id="e81bca77-86ab-4200-980c-b617ffe09a29"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs" methodName="createPrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProgram" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#programName}",
    "org": "${#Project#orgId}"
    
}
  </con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:assertion type="JsonPath Match" id="ad0d23a2-1c1c-498f-9488-e51c7524ccfb" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#programName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="bf9c7986-abb5-4eb3-b461-9d510fa536d7" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferProgramId" id="fe446c96-89ca-48fb-9719-c7a6dfafc961"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>programId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProgram</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>programId</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="CreateProgramDuplicate" id="8d3ce728-d4bc-47fb-9101-783999168f1a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs" methodName="createPrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProgramDuplicate" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#programName}",
    "org": "${#Project#orgId}"
    
}
  </con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:assertion type="JsonPath Match" id="ad0d23a2-1c1c-498f-9488-e51c7524ccfb" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="4ba393f8-a273-4886-a110-ff42c8b4dce9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e616dfa4-ec73-407a-955a-33a32859c13a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProgram-WithoutRequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="73f8d591-ba21-443c-a412-00189414102e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProgram" id="67d8be19-b1c8-42e8-85e6-7e5ac891aeb9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs" methodName="createPrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProgram" id="e97211ef-d141-4cb2-a117-e81816153a68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "",
    "org": "${#Project#orgId}"
    
}
  </con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs</con:originalUri><con:assertion type="JsonPath Match" id="ad0d23a2-1c1c-498f-9488-e51c7524ccfb" name="JsonPath Match"><con:configuration><path>.errors.name.message</path><content>[Path `name` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="e0a63545-5895-4438-a21c-f7ba08080bd1" name="Invalid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="eb73b7d5-be2c-4aeb-ae2e-3fa4231f0ea4" name="Programs-UpdateProgram"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ec2f4843-1567-4af5-bd89-75edc1169958" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ProgramNameUpdate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="ad5097dc-1e15-4b1f-a83b-7c6dcd95521a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="5d845893-8c4d-46ef-817b-17a6c7a1e855"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def programName = randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "programName", programName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateProgramName" id="dbe574e8-6ab7-419e-9823-ea4b3550944d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="updatePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateProgramName" id="6e644ee6-117d-4820-872d-c15b62ee6b34" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#programName}",
    "org": "${#Project#orgId}"
    
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs/prgIMfwg</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e36d84aa-49a4-47ca-82ba-f6e0ddf9f6bc" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf2b863-0d8d-4cb0-bdbf-3ddbb0f6eebe" name="UpdatedProgramNameAssertion"><con:configuration><path>name</path><content>${#Project#programName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1b124942-ce3e-44ba-bed5-b636b78f457b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ProgramDescUpdate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="f8738022-9427-41ab-b4a1-fcb905d2fe4a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="199e3dc9-6fa7-4ea1-9160-7ea7cdd915ed"><con:settings/><con:config><script>def desc ="desc"   //initializing the variable

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def programDesc = desc+randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "programDesc", programDesc )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateProgramDescription" id="2d2b5959-fa60-4ac6-8cf1-7f0f0753cb97"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="updatePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateProgramDescription" id="6e644ee6-117d-4820-872d-c15b62ee6b34" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "desc": "${#Project#programDesc}",
    "org": "${#Project#orgId}"
    
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/Programs/prgIMfwg</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e36d84aa-49a4-47ca-82ba-f6e0ddf9f6bc" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf2b863-0d8d-4cb0-bdbf-3ddbb0f6eebe" name="UpdatedProgramNameAssertion"><con:configuration><path>name</path><content>${#Project#programName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="471e943a-c2b9-4518-b91a-1ccbab08e33b" name="Members-Create Member"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c40ee3fb-7f6d-42a3-9fdc-2e3d7eb6116d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateMemberRequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="87a61c4d-a7c5-448d-ab64-f61457732faf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="f3e978d3-dd19-4bea-8a97-8daf9347e429" disabled="true"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="b0efe7a2-2100-4331-bbb4-884fe625218c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding/><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "${#Project#enrollSource}",
  "enrollChannel": "${#Project#enrollChannel}",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "${#Project#memberType}",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="6c560e13-fc75-4167-84e3-95c598ff5dc0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="391b7185-4fc7-4f13-9fa0-2907ff7449c7"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deleteMemberDetails" id="a0b8fe1a-73d9-4945-bbfd-09f11f57563f" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4e976c5e-9bdd-4779-b729-4a7505b3cfae" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateMemberAllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="8815703a-a3c8-418d-9a33-abe52b2c2c20"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="bbc63648-b680-4295-a742-44ead8b9733a"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="4f174411-14e1-48e6-a585-528f9070beea"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"  
    }]
}

  
  
</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="fe997181-dc96-44f5-a682-c937cc7402e5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="1c91e8b9-2492-45ba-ac15-a16120604e0d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deleteMemberDetails" id="562794d5-1937-42cf-bf2c-3d0cd293c22e" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3de2efea-5765-4e72-b79f-b2d1eaaf742a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteMember" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="deleteMemberDetails" id="71e5e22e-2fe2-46c2-bc21-389d3af80cf1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="498761b7-da46-4012-8345-c763b7d8b979" name="Members-LoyaltyID"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="468f04af-712c-42e2-a81f-16e2c18d1b00" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add LoyaltyID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="bdfb81da-0bb9-4df5-b9b6-046739b9598b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Properties" id="37df377b-c800-4f6c-b755-861734e368b9"><con:settings/><con:config><script>def newLoyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+newLoyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "newLoyaltyCode", newLoyaltyCode )</script></con:config></con:testStep><con:testStep type="restrequest" name="Add LoyaltyId to Member" id="c188f3a0-b547-43fc-89d0-4b2b108ee4fe"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add LoyaltyId to Member" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": [
  {
      "name": "Membership Card",
      "code": "${#Project#loyaltyCode}"
  },
      {
        "name": "SVC",
        "code": "${#Project#newLoyaltyCode}"
        
      }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:assertion type="JsonPath Match" id="d5544f79-2834-4483-8181-b929def8d607" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="90211751-ff4e-46e8-9046-e7e588c21bcb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="793c4617-df8b-42bf-864e-f77bfee5c42e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4321392b-4339-44e3-a44b-1d609f61f6fc" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="409e60bd-e6bc-4e7d-a944-ee6f6f7b8adc"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="a85e960c-584e-4e00-ab27-d2bee84bcc17"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4c0f32a1-3e03-4b03-9fb3-ced2e326f1cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Existing LoyaltyID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="d93c7279-f5d0-4e13-ac6e-a598229640e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="30ae7b48-3deb-489a-8eca-52278196c389"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bb56d1f-70b4-4357-b8e6-3fa5f59dba75" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Properties" id="cfe26bf0-d014-444a-a521-afdc9f021ed1"><con:settings/><con:config><script>def newLoyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+newLoyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "newLoyaltyCode", newLoyaltyCode )</script></con:config></con:testStep><con:testStep type="restrequest" name="Update LoyaltyId to Member" id="0f5ab131-ba55-4fec-8655-25e6efbb433f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update LoyaltyId to Member" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": [
  {
      "name": "SVC",
      "code": "${#Project#newLoyaltyCode}"
  }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="72ecbf41-dc24-4042-9125-63ed5a705432" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="42e2f2ea-f1eb-46b8-aa0b-29b2da35116c" name="JsonPath Match loyaltyCode"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Update Member" id="a6b2648b-0048-4477-97cf-cef7e3ea0c20"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Update Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bb56d1f-70b4-4357-b8e6-3fa5f59dba75" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="05cc6373-53f3-41cb-88a6-bc1fc99610d8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="eb2f755b-0ed5-4e53-8c5f-1377a1cd2dd3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="32a445d2-6f22-4103-93a7-f42db6b6bcad" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Existing LoyaltyID Name" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="362fc2da-5d17-4b5f-8230-c4cf23898b2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Properties" id="75be856c-9805-4084-8151-3cddaf703b7d"><con:settings/><con:config><script>def newLoyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+newLoyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "newLoyaltyCode", newLoyaltyCode )</script></con:config></con:testStep><con:testStep type="restrequest" name="Update LoyaltyId to Member" id="75956d04-027b-4aae-a836-c38dcea75e64"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update LoyaltyId to Member" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": [
  {
      "name": "FaceBook Profile",
      "code": "${#Project#loyaltyCode}"
  },
      {
        "name": "SVC",
        "code": "${#Project#newLoyaltyCode}"
        
      }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="72ecbf41-dc24-4042-9125-63ed5a705432" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="3efc0658-0366-4856-8676-83a68003efc7"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bb56d1f-70b4-4357-b8e6-3fa5f59dba75" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="1ce0406c-107d-42ce-b2e8-c0993da5aa85"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="94765b81-0a15-450d-978c-63e8d826d1ae"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e2756304-b822-4dfd-b0b7-7a593af7c4cd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Existing LoyaltyID Code" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="d8c7dd6f-502f-4619-abf7-e0dd5eaa30a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Properties" id="467098b6-18da-48de-99b1-ddf563ec0bb9"><con:settings/><con:config><script>def addLoyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+addLoyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "addLoyaltyCode", addLoyaltyCode )


def newLoyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+newLoyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "newLoyaltyCode", newLoyaltyCode )</script></con:config></con:testStep><con:testStep type="restrequest" name="Update LoyaltyId to Member" id="48758eff-7e7c-4049-8c86-aa25407d9fb2"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update LoyaltyId to Member" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": [
  {
      "name": "Membership Card",
      "code": "${#Project#addLoyaltyCode}"
  },
      {
        "name": "SVC",
        "code": "${#Project#newLoyaltyCode}"
        
      }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:assertion type="JsonPath Match" id="d5544f79-2834-4483-8181-b929def8d607" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="72ecbf41-dc24-4042-9125-63ed5a705432" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="82fb991b-2d00-43db-b0cf-925b2fb42e8d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bb56d1f-70b4-4357-b8e6-3fa5f59dba75" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="4be052a2-a771-4cdb-8e51-504412ad7f9e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="7eee8627-44d6-44cd-9ee8-90122f36559a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="38f9ebf9-5914-4dd1-8d70-c74e4a9b2ea9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Existing LoyaltyID-NegativeCase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="ae861a1b-1ba0-440d-b529-0c2cf943e459"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete LoyaltyId to Member" id="5a40eb03-bda3-459a-a838-12429a2e180e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete LoyaltyId to Member" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": []
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df36a7f4-b5f0-41d0-87a7-6d73e571d495" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1c990946-3c20-47c0-917f-b6161d26fe4c" name="JsonPath Match"><con:configuration><path>message</path><content>Member requires at least one Loyalty IDs</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="ac476bb9-6c78-4f69-995f-a636133ed6c8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6732e40d-de1a-4ad8-b576-78557ba5ec11" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Existing LoyaltyID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="16fa94c7-08b2-4475-8609-8a2e906114e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Properties" id="dec6272b-bb72-4941-b6df-7d345cf18fda"><con:settings/><con:config><script>def newLoyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+newLoyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "newLoyaltyCode", newLoyaltyCode )</script></con:config></con:testStep><con:testStep type="restrequest" name="Add LoyaltyId to Member" id="9d110f2a-906c-45bd-828b-f4f3fff5167b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add LoyaltyId to Member" id="1b28ed42-8bb2-4412-a0ac-212a36552571" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": [
  {
      "name": "Membership Card",
      "code": "${#Project#loyaltyCode}"
  },
      {
        "name": "SVC",
        "code": "${#Project#newLoyaltyCode}"
        
      }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b920af3a934700047592ed</con:originalUri><con:assertion type="JsonPath Match" id="d5544f79-2834-4483-8181-b929def8d607" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="72ecbf41-dc24-4042-9125-63ed5a705432" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete LoyaltyID" id="106b8e8c-be4e-4b3f-9d4b-b7711b5e4b95"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="Add/Update/Delete LoyaltyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete LoyaltyID" id="6f482a36-b8cf-497a-82bd-5d041f0ee19e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "loyaltyIDs": [
  {
      "name": "Membership Card",
      "code": "${#Project#loyaltyCode}"
  }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b95ad73a934700047594e5</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="41fe6e2d-3339-4dfc-a271-943fcbba545d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01b71fbd-5e3c-483e-92f1-91af5b1ce38b" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Member" id="f8a1f19a-ab56-4cf5-ba10-947e11ecbbc5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d63d5455-bf10-4a73-b793-9b4093b7532a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bb56d1f-70b4-4357-b8e6-3fa5f59dba75" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="c6c076e7-04d2-4daf-b642-9f186c0aa0d6"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="7f7e14d8-cc35-4fd6-9b27-58074c465060"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="053122a5-17a5-4a8e-ae98-f51bff40d457" name="Members-Read all Members"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="cdf3e3c7-d639-4abf-9196-81c637bb593a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get all Members" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get all Members" id="93a7b1a2-882f-4f0e-a290-a2fe0612ec00"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/" methodName="GetAllMembersDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get all Members" id="ae878ec0-eeab-40d9-b4e2-b0fbbe83b819" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="746af27c-8aa7-4d91-8e47-f185b3fc37f2" name="Members-Create Member-NegativeCases"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="648fca38-7f8b-4803-b110-00e044c5623d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member -First Name as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="5b8f1840-4726-4082-a076-d422493354d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="c5402c5f-02ad-4dab-8ecf-28815fdcf072"><con:settings/><con:config><script>def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="ada77967-95b1-42e3-a738-91086873daf8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>.message</path><content>[Validation Error, Path `firstName` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="85e72e4b-01c9-4abb-a8b1-bafb82fb8b78" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member -Last Name as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="f5694be6-cb7e-45db-a776-d1c02587864d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="2cbee84b-54a9-4784-8d0f-ba8455d1a6a2"><con:settings/><con:config><script>def fn ="FN-"



def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="5a158aad-9a9d-4de0-8ab6-721d8608d87d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>.message</path><content>[Validation Error, Path `lastName` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="17509679-fd28-46de-9364-b8be782ad817" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member -MemberType as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="60236860-6c59-4eb8-8529-b334334cfe91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="4e739398-ef2d-4857-9702-d5d34eb940c2"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="d40b69bd-eb07-48c7-8ed5-07aee42e3e68"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "",
  "firstName": "{#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="76a4b5bf-5655-4226-9fa7-7546521b3df9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member -Program as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="2932e26e-c875-4b5c-a2a9-3f39d4f5d0a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="fb21c75c-f534-4977-aa12-060053813cf5"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="5949ebf2-cc16-4fe9-abd2-ea9fc5434aec"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "type": "Individual",
  "firstName": "{#Project#firstName}",
  "lastName": "{#Project#lastName}",
  "program": "",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f0b7aeb5-7f9e-4002-b727-af3de485bd67" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member -No Program element" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="ae4f127f-5580-45e6-970c-e50050e87bab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="02a5efbd-c982-4b67-9bde-43fa31d37944"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="3b03d377-e67f-42c4-8fef-0fa8bc6b7c9c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "type": "Individual",
  "firstName": "{#Project#firstName}",
  "lastName": "{#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fd49bf15-f8d1-4db0-96ba-4d118c379802" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - LoyaltyIDCode as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="1ca67486-7739-4aab-aa1d-7bf09c0b7f06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="79ce8ef1-155a-43b4-a940-133ec834f17f"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="e3a9a680-9545-446d-b4b5-eecb36927f9b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "{#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": ""
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>.message</path><content>[Validation Error, Path `code` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bba83cbb-f0b7-4a50-b7f5-1266b58ce225" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - LoyaltyID Name as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="17ffe793-b413-4a4a-965c-f42896cda77d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="7dd23aae-4dc4-409a-834c-34f1c5e7d770"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="62520e88-082c-4223-88be-b72973f8447e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "{#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>.message</path><content>[Invalid LoyaltyID]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9d13ccf9-4a26-458f-8b42-7bedfb277563" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Enroll Source as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="ee77e553-6778-453e-a7e7-44a69e619275"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="500b04f6-f62b-431a-bfca-f96c487c76cf"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="9b28a7c2-3dd9-43bf-9265-451e99bb94e1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "{#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="de38982c-2d3c-440b-b888-bc0a4b143012" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid FirstName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="d93b96b6-eb3e-44c6-b189-19bba4c92454"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="16966e05-1deb-4f7a-ae2a-d9cf0b4d4929"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 102 )
def firstName = fn+randomValue
log.info(firstName)
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="48c4cf32-35f3-47dc-9d9d-e1730456c2fa"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="34940100-fdd0-4241-872a-0d5cbf557fcf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid LastName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="31d810e9-e0eb-45d9-8060-d502ae4bd1f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="44658da1-951c-4e05-b7cd-61a76449f60a"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 101 )
def lastName = ln+randomValue
log.info(lastName)
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
log.info(firstName)
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="61cca8d0-9799-46b8-9481-e996e685477e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bc4406ec-e197-414e-8bca-44c04b4eb9cd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid Email" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="45cec538-cd62-4343-8d85-15979c31f062"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="ce4c087f-ad0d-4fe0-b4ec-49cbd6f993b9"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def email = em+randomValue


//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail*com" )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="47c14829-4e27-4333-b188-0373b40ad785"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "email": "${#Project#email}",

  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="5440f6ff-d7fa-44f9-8d7b-7b210ae966ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid PhoneNumber 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="a25d8382-95b5-424c-b46f-03550cac0b2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="f8cedb3a-eb81-4009-bf7a-cc51a8336fe8"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def ph ="+1 "
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for phone number
randomValue1 = generator( (('$'..'%')).join(), 2 )
randomValue2 = generator( (('0'..'9')).join(), 8 )
def cellPhone = ph+randomValue1+randomValue2

log.info(cellPhone)

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="cf671ed6-11aa-47c8-b01a-20fe4769921f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "cellPhone":"${#Project#cellPhone}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="7f3449f5-c018-416a-8b84-c6c5c3431536" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid DOB" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="2cb1c040-2556-4294-a500-d2e9398edda3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="d1be8395-4748-4a6f-ad3a-a1365a2d913a"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt;= 12 ) ? "2" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "1" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info(dob+"T02:25:00.000Z")

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob+"T02:25:00.000Z" )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="741af1d8-e051-4c38-8f6a-4520cb7403a5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9c0c153b-d2bf-4cba-8921-98cf457317df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid Address" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="e6029408-20e1-4e1d-bc4b-870f97a062ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="78a5b709-11ac-4077-9fa8-4786921a271f"><con:settings/><con:config><script>
def stno=""
def add=""
def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 255 )
def addres = add+randomValue
def address = street+addres

log.info(address)

testRunner.testCase.testSuite.project.setPropertyValue( "address", address )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="735108f6-17a7-49e3-87e0-92e3b30c37bd"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "address": "${#Project#address}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b4107245-e4c4-4131-844e-09a6ba8c331c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid City" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="cdbf80f7-cf0e-461a-bb4f-3cfcfeb00eed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="77842d34-318f-4b42-9bdb-660bd3db6d15"><con:settings/><con:config><script>def city =""
def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
//random value for city
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 55)
def cityName = city+randomValue

log.info(cityName)

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="a50b1ee3-4eaa-4e0c-87f2-0603ce129edb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "city": "${#Project#cityName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0a7e3709-13c3-44f4-addd-d7604c84eb83" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid State" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="879654e1-8004-48aa-bc9c-ff209e66bd6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="b2d2d465-08f4-4102-845d-96ae1ad3db68"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def state =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for state
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 55 )
def stateName = state+randomValue

log.info(stateName)

testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="c0b0b790-3ca8-4260-9b45-dd16d10d382b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "state": "${#Project#stateName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="951fa31e-6d64-4130-8856-ef4f180ff375" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid Country" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="8371450f-b430-4b12-ab2f-1fd0eb0d886d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="ef0d2752-4ca2-4093-bd5e-d03092273eb1"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def country =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for country
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 55 )
def countryName = country+randomValue

log.info(countryName)

testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="7b5a84a3-9d9f-426b-9250-c017b3f22527"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "country": "${#Project#countryName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="de576182-b34c-45c7-853d-e68d16bfef78" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid ZipCode 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="dee520a9-ba94-4396-8812-9409b5b178c3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="12a89375-23c6-4793-a861-76a209b4293b"><con:settings/><con:config><script>def zip =""
def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')+('A'..'Z')).join(), 5 )
def zipCode = zip+randomValue

log.info(zipCode)

testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="b0dec508-e930-4768-98a5-395a7a716c6c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="719597a7-c0ed-434c-a919-6376ac6f6504" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid Enroll Source" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="e28a6035-bcf2-423e-81a6-2e9116571169"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="def8c887-ddec-471c-988f-19d7ee255a51"><con:settings/><con:config><script>

def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="cac9e844-5efb-4ca7-98e8-4105294fea7a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "shgw sjwidh",
  "enrollLocation": "587da43fae95eb5e1bd006ef",
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Invalid EnrollSource</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0bc203bd-3855-4ab1-8c0a-4fd7376cf024" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid EnrollLocation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="8a020e7a-edb4-462a-8295-38f769235f2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="eb34ede5-6bd5-4e86-a10b-98775a058f7d"><con:settings/><con:config><script>

def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="3bd010ca-bb7d-4d6a-b8a2-00c6522a6571"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "shgw sjwidh",
  "enrollLocation": "587da432wdfteb5e1bd006ef",
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Invalid EnrollSource</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="287dd32b-eb1b-4b1f-bb31-eede3910db04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid Member Type" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="f23f2e73-ecf4-4553-9a5b-1c4ca21284f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="dde14eff-1d2c-4c97-a625-107a812f3682"><con:settings/><con:config><script>

def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="2a9626a7-eca4-4d84-a301-3344ce083fdc"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "shgw sjwidh",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "wwedxd",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Invalid MemberType</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7d6ee108-49c0-4e26-9e2a-a747b0937fab" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Duplicate LoyaltyIDCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="e6d94050-320e-45d3-bea4-0bd332ab04c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="9a45cb48-c414-4e03-a0fb-d59da41752ee"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="6e0935a7-3fe3-4fa8-991b-ed0f937d1ba0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "{#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltyCode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7dae8015-b4b3-4241-b74f-a35c14b37ea7" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember-DuplicateLoyaltyId" id="24bbf920-b86c-4424-8c85-35524aacc7c5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember-DuplicateLoyaltyId" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "${#project#memberType}",
  "firstName": "{#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltyCode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="45457639-3b5e-4e7a-9057-cf459c841bbc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - DOB greater than Current Date" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="ac6c56cd-97f1-4e3b-ab0b-08b7554ebc9a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="edd96b3c-780a-43c8-8cdd-6f0a96c7f9bd"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (2018 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt;= 12 ) ? "2" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "1" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info(dob+"T02:25:00.000Z")

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob+"T02:25:00.000Z" )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="04f0e118-97fd-4ae3-8374-d7fc9f2b9de5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ed9bdd66-f3a9-472c-b857-348a6c129471" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid ZipCode 2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="d6a9c5d3-ed96-4b73-a499-214b66e2506f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="5865c2e1-db45-4c3a-a0ab-fb59962baa64"><con:settings/><con:config><script>def zip =""
def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 51 )
def zipCode = zip+randomValue

log.info(zipCode)

testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="4649f6b1-4b66-4ff6-9685-e1d8d0f0c3e9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="64fb1a2c-4bb9-4552-b381-6d9de7ce2d8d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Member - Invalid PhoneNumber 2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="9b4d3668-7c30-49a0-bb65-b4544a70b93c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="d8ba2450-2322-412a-aaee-18c190356a92"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def ph ="+1 "
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for phone number

randomValue2 = generator( (('0'..'9')).join(), 50 )
def cellPhone = ph+randomValue2

log.info(cellPhone)

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="9c74eb13-c274-43e2-88df-cc5e13fa5852"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "cellPhone":"${#Project#cellPhone}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>.errors.cellPhone.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a253afb2-742a-48a7-a2b2-1e9c15b1aba9" name="JsonPath Match2"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="94124562-877d-48f4-b950-8e160a3fd0e1" name="Members-Update Member -Valid"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6ce28088-4249-4d7d-9c92-0b9ddd98f3cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateMemberAllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="862494f4-7978-42f6-810e-2bc4dbee451d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def suiteName = testRunner.testCase.testSuite.project.getPropertyValue( "createMemberSuite" )
def caseName = testRunner.testCase.testSuite.project.getPropertyValue( "createMemberCase" )

testRunner.testCase.setName(caseName+"skip");

def tc = testRunner.testCase.testSuite.project.testSuites[suiteName].testCases[caseName+"skip"]



def runner = tc.run( null, false )
testRunner.testCase.setName(caseName);

assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="3037dc78-1b1b-4001-bd67-9a3bbed3358d"><con:settings/><con:config><script>def fn ="FN-"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberFirstName" id="3b4511ae-0462-446b-b835-85bdacea39df"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberFirstName" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7aa0fd84-7abd-4d17-9c13-d5454db0356f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0c6c0730-77e0-4681-af7c-50d6f9628dbd" name="JsonPath Match"><con:configuration><path>firstName</path><content>${#Project#firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="43613cd5-a62c-452a-93e9-fb7784106835"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>firstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateMemberFirstName</con:sourceStep><con:sourcePath>firstName</con:sourcePath><con:targetType>firstName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="1787a13e-be6c-476e-8f94-68c675364c1a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>firstName</path><content>${#Project#firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="6a3b0c60-2755-4ae4-8aec-0677bed3847e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="2cce3563-7816-4049-8d2b-83bf002392cd"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="265f2a68-8fc9-4580-be78-1706eb93e48e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LastNameUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="81205016-fc03-418c-96fb-84611d7ea631"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="e389977b-0787-48b7-b654-f26ec58e15c4"><con:settings/><con:config><script>def ln ="LN-"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberLastName" id="42b0c0de-7c33-4c95-a011-48022c97e64d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberLastName" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{

"lastName": "${#Project#lastName}",
"name" :"${#Project#createdAt}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ba02b9b6-2b90-4cca-b378-8b190902557b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c5f5b0de-ae28-4afb-8116-e9e7dc6afc02" name="JsonPath Match"><con:configuration><path>lastName</path><content>${#Project#lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="046adfc7-b26a-401c-b5bc-e470085cf798"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>lastName</path><content>${#Project#lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="9441e674-260b-4638-acf0-81d7cd8e5a4e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="6a94fde6-fa0d-4041-ab75-19162f022d3a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="78717f84-95a1-425a-a88c-fe7ef1e725d3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EmailAddressUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="03c54bce-984d-44db-bffa-0b3ffd4ec842"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="a34bb00f-ae6f-4ee0-912a-f245ad87a227"><con:settings/><con:config><script>def em ="EM"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def email = em+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberEmail" id="6e5ba9d9-2e9d-4d11-a1d7-7c4695f95f45"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberEmail" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"email": "${#Project#email}",
"createdAt": "${#Project#createdAt}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6a8741dc-f3dd-4262-b1bb-81d491faa2fa" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="85819526-dee2-40b9-be91-45373ddaa420" name="JsonPath Match"><con:configuration><path>email</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="f2fa1bee-e823-445e-bf7d-9329e90e4f07"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>email</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="00503360-7ded-4a72-98c2-77bc806ee44e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="981c5605-2af3-4b7a-9710-fd5c27781424"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="350bf8e3-4c6f-43e6-8e3b-8f175377890e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PhoneNumberUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="d57ea0bb-ba74-48f8-9443-eac5cbb592d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="562e4a53-038a-477b-9d28-6693fc764a41"><con:settings/><con:config><script>def ph ="+1 "
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 10 )

def cellPhone = ph+randomValue

log.info(cellPhone)

testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberPhoneNumber" id="f3b4a552-3b1f-4223-8b44-abae81687247"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberPhoneNumber" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"cellPhone": "${#Project#cellPhone}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4470da2b-213a-40b9-955f-da956d4830dd" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8cd7a1c8-0c2a-460c-8fab-8289b8c41f2f" name="JsonPath Match"><con:configuration><path>cellPhone</path><content>${#Project#cellPhone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="c53070e5-f90a-4283-9cfa-9a5d38fc422a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>cellPhone</path><content>${#Project#cellPhone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="81818918-8f45-42e4-ab2a-2c7027ae4d23"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="0a5eee5a-7b71-4c11-b9a9-54f1529954e7"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="abeb10b5-4d3e-4afc-bcb6-895fdf14e42d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DateOfBirthUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="749d67a9-3bab-4310-a9a5-5dd0cca5016b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="c826ad8c-5a3a-4b1a-83ea-410af788dbd4"><con:settings/><con:config><script>def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
//log.info"DateofBirth $dob"
//testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )
log.info(dob+"T02:25:00.000Z")
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob+"T02:25:00.000Z" )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDOB" id="5ec73b6f-361a-4753-b8dc-e5b0d0596921"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDOB" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"dob": "${#Project#dob}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="0065e628-27fc-4aeb-9469-b7bc8ce0d953" name="JsonPath Match"><con:configuration><path>dob</path><content>${#Project#dob}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="7fbe87d2-beb5-4e37-b23c-46e26cc8be79" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="f8726a1f-e5da-40ee-a422-27cfacf3a4f8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>dob</path><content>${#Project#dob}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="1c5b395b-a72a-49dd-9b10-87e4a08ce2fb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="198e6ffa-f26a-4ee8-92d1-e39569498fb8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e02185ae-052a-4c23-9e1a-83ac7838eee6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddressUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="6498d26b-9794-496c-97cc-3bf1fa6598b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="1f357b77-324d-4f63-8885-43e4dc49e808"><con:settings/><con:config><script>def stno=""
def add=""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def addres = add+randomValue
def address = street+addres

log.info(address)

testRunner.testCase.testSuite.project.setPropertyValue( "address", address )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberAddress" id="5f90c3eb-3ba7-4ff5-9b55-08163c37426e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberAddress" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"address": "${#Project#address}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>address</path><content>${#Project#address}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5520311b-7f52-4b47-b785-385b5c60282e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="453cf27a-988e-45a0-bab1-59585ede166a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>address</path><content>${#Project#address}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="7c2dc121-b7b5-4eea-9d7e-989d0fcf915e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="553b2413-6c69-4bb4-a861-bba6c51a50bb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e63a39b6-d5a7-4ec2-8253-a20057d75557" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CityUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="c7ee0298-0579-44e9-8941-607e347f2d6b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="9bd083b1-2c95-4c9a-bd5a-f73580676239"><con:settings/><con:config><script>def city =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue

//log.info(cityName)

testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberCity" id="828fe2e5-4834-46e9-be4b-6fd090a1d4d3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberCity" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"city": "${#Project#cityName}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="d416ffe1-7b25-434b-b9a2-aee7903fde7a" name="JsonPath Match"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5cc18260-a58a-4948-afc2-0fe68933c231" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="74fe76eb-e6d5-48d7-aa86-df1be839a517"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="87397744-242b-40af-8db1-d9222b9cb955"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="b4c97fd3-6cc0-42c8-9d61-903018664de0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0fa62074-8915-4812-a97d-512115590f1a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StateUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="8a1f3af0-92d3-4f7f-a236-f843e4e1d540"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="ccfbfdd8-f2b5-48a7-a234-ede96bafa93d"><con:settings/><con:config><script>def state =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue

log.info(stateName)

testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberState" id="21c6e51d-e52a-4f28-8965-712446f1e19b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberState" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"state": "${#Project#stateName}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f035ec5b-4b18-44f0-ba82-fcdc0e7e4a3e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="233cda44-7228-4d5b-bc77-f7e4fb7006f8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="9d581580-828e-4dc4-8fd3-1ae1fa282611"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="bd92d0b2-b7e0-45d4-8351-2f5b5f03df9a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="73e882d3-12f7-4371-90d0-1cee264ffde2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CountryUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="427f49a0-864c-4c85-ae36-3cb6e5e04635"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="a8bbc1a0-19c1-4a49-82d1-f1b7efbda83a"><con:settings/><con:config><script>def country =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue

log.info(countryName)

testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberCountry" id="e952722f-2c64-40d2-89af-66815abe50bb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberCountry" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"country": "${#Project#countryName}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="843901ca-f3c0-4165-bf1e-1698bd39abbd" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="59b77a35-6657-4870-8787-4085caba2d2a" name="JsonPath Match"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="9cf4de30-35c0-42b6-8488-f69db56c3ede"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="e996b191-29bc-43ce-829d-1018e0ced170"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="1e06298a-62e5-48ba-bfcc-a8eeecc776e8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e18dc1cd-1742-43a5-8164-3501fdea42fb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZipCodeUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="e507fdd0-cb7d-4072-a21c-0afbd7eec56c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="c29a2129-f660-4ea7-858f-89b0cdfa3c81"><con:settings/><con:config><script>def zip =""

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

log.info(zipCode)

testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDetails" id="18b360a5-2838-4f9d-8c82-ac88ec4683d2"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDetails" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"zipCode": "${#Project#zipCode}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="ea2091d5-5e11-4cbb-af4c-517fa2647022" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="094e762d-9790-4f97-ab02-6e4eabae9818"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="1bdc1a39-b38f-42c2-ba01-456b175be70c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="a7838cdb-dc9b-4e55-b01e-14060d9aed84"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a0890f9e-4c31-4d81-a70d-ad25e23ab25c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MemberTypeUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="00e6c923-fed6-41f1-9f63-42c309f8cd47"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberType" id="bee49b2f-13fb-4447-ba4f-ec42cce1c3ee"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberType" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"type": "Individual"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>type</path><content>${#Project#membertype}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="cb52c87f-34db-468a-a755-f3bc53906781" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="a559519b-aec1-4e79-9f8c-b74b3e386cc9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="JsonPath Match" id="fd76ab3b-c7b6-44a5-97d9-96c1d3c8a27b" name="JsonPath Match"><con:configuration><path>type</path><content>${#Project#membertype}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="fcc76998-4af6-4583-87f1-4084409a861e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="cd76432f-0963-4ef6-800c-9aea8bdc42cb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d3b08bc3-1b0f-41b8-9f29-17dd528276c1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EnrollSourceUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="013d329b-f642-4b03-9670-3fd6d25176af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDetails" id="54bfb5d3-7389-449e-a7fd-da3a09c282d8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDetails" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"enrollSource": "Campaign 2"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="656e5773-1cef-4adc-b9ad-cf7b1950166e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="d1320f90-415f-40dd-ab8b-66b7b1623290"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="a15aa38d-9f38-44c2-83c5-798e66f0d92b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="e4cb08ce-bffc-409a-8d30-b8ada93d0fc6"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="19c7c9fc-34f8-4ff0-a998-077c33376081" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EnrollLocationUpdate-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="09be147b-4fc6-42f3-91a7-0497db9fb980"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDetails" id="c9ff5f68-cafc-48eb-b4e7-657c96c46d1c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDetails" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"enrollLocation": null
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="877ceef9-ebad-432c-a078-6a5d4825d6e0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="415fa9e3-6a22-470f-85da-cdc6aaa830ad" name="JsonPath Match"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Member" id="f3c33d8a-1daf-4384-9601-ac428184b624"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Member" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df2e38fb-1597-4ef6-afcf-7bc4d300ad9f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="367a54ac-70d3-4d29-b4ff-6cdfca6a1797" name="JsonPath Match memberId"><con:configuration><path>_id</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b14935f2-362c-4abd-8586-08a3317c5028" name="JsonPath Match uuid"><con:configuration><path>uuid</path><content>${#Project#uuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="46956945-5d76-45be-8513-9864874dd593"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="21de74ea-5c56-4e36-b846-6dbe7f1c5548"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="f5657937-ddf8-499a-a0aa-9f589cba9332" name="Members-Update Member - Invalid"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="247a99f8-d05e-4cd9-8dd3-6d60da20bbf7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstNameUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="c141c384-c3ba-4410-b458-54b0014255c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="82e6e750-e12f-4f4d-8b04-03f9c01cac2c"><con:settings/><con:config><script>def fn ="FN-"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 102 )

def firstName = fn+randomValue
log.info(firstName)
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberFirstName" id="384d2f19-6312-4e39-be85-a7819b1e509d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberFirstName" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="f0e8fd4e-528b-43e3-b684-9c5ebcf71df5" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="aa46e385-809f-42a5-a436-d274ada6f5c7" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="e1dca905-607d-40f9-969a-91c948096a74" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="7e48fde8-07e2-47e7-9125-7b4106e6711b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LastNameUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="9e72a9e5-2262-4765-bc9c-268df013f176"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="d4fa065d-8528-4cc6-86d3-0093fd1bd3a4"><con:settings/><con:config><script>def ln ="LN-"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 102 )
def lastName = ln+randomValue

log.info(lastName)
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberLastName" id="02035185-58f3-4ed3-b38b-abf764dfc04a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberLastName" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{

"lastName": "${#Project#lastName}",
"name" :"${#Project#createdAt}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="b6150f14-6df3-4b25-beae-56bd857b2d7d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="bd8ea7b4-221f-43e7-801c-108955f3c161" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="f35e498d-d5fd-401d-b248-92c0535faf37" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="5d5191d6-ed82-4425-acec-f3da25f39221" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EmailAddressUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="18860b83-e736-4a06-899c-17bb546ee517"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="18120005-f258-4b54-8eda-65345ba85ad5"><con:settings/><con:config><script>def em ="EM"
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def email = em+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail*com" )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberEmail" id="384545a9-bd5b-4715-b52c-a4cb45bc08b4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberEmail" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"email": "${#Project#email}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="5283ab2e-6967-42d1-9d6a-ac33c07a5ea4" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="90df29c2-aba0-4e03-9452-54fa50983e48" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="e401a68b-9021-4072-aad0-af57fc3283ba" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="7ff7b7db-5d2a-4350-ac8c-543bf1dfc394" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PhoneNumberUpdate-Invalid1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="7adb91f4-ee34-47bb-8958-cb73e6d47f85"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="31e418d6-a7b8-4b53-84d2-f065a213c6a9"><con:settings/><con:config><script>def ph ="+1 "
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue1 = generator( (('$'..'%')).join(), 2 )

randomValue2 = generator( (('0'..'9')).join(), 8 )

def cellPhone = ph+randomValue1+randomValue2

log.info(cellPhone)

testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberPhoneNumber" id="f4002846-1c8f-4759-9f76-a10c6750951d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberPhoneNumber" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"cellPhone":"${#Project#cellPhone}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="1aafdbf2-a4af-4fa3-bd52-f615ec524909" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="2d3cb932-8ebb-4bee-957f-f800b7b639cb" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="442af40a-ff06-4722-aecb-c5c2a3a4dc76" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="ec62b485-ab3a-4e72-96c9-d6f388d07140" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PhoneNumberUpdate-Invalid2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="07a3c2a2-f60c-4644-867f-809130d9cf3d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="f17afb01-4e0a-45b0-a19e-a68286bd8fd5"><con:settings/><con:config><script>def ph ="+1 "
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
//randomValue1 = generator( (('$'..'%')).join(), 2 )

randomValue = generator( (('0'..'9')).join(), 51 )

def cellPhone = ph+randomValue

log.info(cellPhone)

testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberPhoneNumber" id="9c492740-148b-42f0-9bd5-4a9a34efde0b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberPhoneNumber" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"cellPhone":"${#Project#cellPhone}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="1aafdbf2-a4af-4fa3-bd52-f615ec524909" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="47f89c17-d16a-4a7c-84e7-2520c651a959" name="Invalid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="9bb354c0-5439-40f5-bc28-52cff60c341f" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="a1e8ca33-54a5-4f39-9dbf-3e527649d781" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="905ed472-6231-4d78-9f9b-13e5946f9653" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DateOfBirthUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="ed2e0252-bad5-469d-9089-8c15db361972"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="RegenerateRandomProperties" id="b9b6cdc2-9902-4613-8f95-013ceae75c38"><con:settings/><con:config><script>def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt;= 12 ) ? "2" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "1" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info(dob+"T02:25:00.000Z")
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob+"T02:25:00.000Z" )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDOB" id="7b78a2f9-1e08-476e-a627-0012abc091d1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDOB" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"dob": "${#Project#dob}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="0065e628-27fc-4aeb-9469-b7bc8ce0d953" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="19d7e2f3-11c5-46ac-984b-d7c81ace277b" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="9e4cc476-44c5-4317-a34b-bfe76d54ff0a" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="daf806e3-cd0f-4cfb-bfce-3c9d8a80d2cb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddressUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="60fa2109-00de-4883-bf29-72b4a8f1e267"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="956cef9b-14d1-4dea-8f4a-982e88ab4cd7"><con:settings/><con:config><script>def stno=""
def add=""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 255 )
def addres = add+randomValue
def address = street+addres

log.info(address)

testRunner.testCase.testSuite.project.setPropertyValue( "address", address )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberAddress" id="b2963197-faab-45ad-8d92-7133713b9ebf"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberAddress" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"address": "${#Project#address}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="02baffe6-7481-4e31-9efe-07479c50e0b9" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="0e3a2ff9-7f79-4758-b39a-e761ae2d95d4" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e4e0cb7b-df51-4cb8-bac0-cb9823d127cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CityUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="97cc9824-9b31-4b2a-98d4-15c0d98e8242"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="c98b57a0-cbe2-4956-96fc-86411fd8220d"><con:settings/><con:config><script>def city =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 55)
def cityName = city+randomValue

log.info(cityName)

testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberCity" id="141914fd-45ad-4543-9357-81ced333264a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberCity" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"city": "${#Project#cityName}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="193da8a2-6390-4ca3-8c05-8d1aef41981b" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="cc333807-c16c-4406-add7-e83f1dfbbf56" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="1fce0c02-e27b-494c-8769-6d89db41a52c" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="61e39889-8764-41bc-83f6-a20bf8b8da0a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StateUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="159103b4-a13d-4eb8-a42f-72d4760e3960"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="b41ce3e8-10ab-4dbd-be20-7f786983666c"><con:settings/><con:config><script>def state =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 55 )
def stateName = state+randomValue

log.info(stateName)

testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberState" id="cd78e591-4c26-4d18-8b6d-87d4b660092b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberState" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"state": "${#Project#stateName}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="7cc8dba5-22ab-43ed-9aa1-7191f60f7918" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="f07571b1-9c7e-4a2d-8854-8098c83a7704" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3992418e-87ec-4fe4-8dd6-35a37e4ff4e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CountryUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="753eaffb-7f2a-4d59-8d44-a5469a355f12"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="bf0c342a-16f9-4970-bacb-e3a4a9da2d5f"><con:settings/><con:config><script>def country =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 55 )
def countryName = country+randomValue

log.info(countryName)

testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberCountry" id="55a4f2ca-3160-4af5-a5cb-2ab137b0040f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberCountry" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"country": "${#Project#countryName}",
"firstName": "${#Project#firstName}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="d60906f2-3567-44b8-9c8f-d77862e17dc1" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="581f1a1f-4ab2-47d2-9325-a8f3bbfef9dc" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="886f1e3d-c0a1-467b-8c80-717cb43a91eb" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0692b4fc-c157-4624-9793-f6840db5626a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZipCodeUpdate-Invalid 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="eb7930f5-7b72-4cd7-a576-fcab504ee35a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="72f96a02-1f86-4f44-adfa-2d47b8de67f9"><con:settings/><con:config><script>def zip =""

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomValue = generator( (('0'..'9')+('A'..'Z')).join(), 5 )
def zipCode = zip+randomValue

log.info(zipCode)

testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberZipCode" id="763c34e2-41e8-48fa-9bcf-04709a634dae"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberZipCode" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"zipCode": "${#Project#zipCode}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="2e6c9d64-9777-4fc6-bb13-d0679bc64a08" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="d16548a0-d80c-4976-b866-d23c3ceef6f5" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bc10a60a-3311-458e-9c65-f02f8a741a95" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZipCodeUpdate-Invalid 2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="61fa2ae5-ddc3-42e4-becf-2fc701bf5848"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="3a0db3d0-7aaa-40e5-8479-720acb1342eb"><con:settings/><con:config><script>def zip =""

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomValue = generator( (('0'..'9')).join(), 51 )
def zipCode = zip+randomValue

log.info(zipCode)

testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberZipCode" id="0a60e6ef-4748-405b-bc76-cbdc60dbb942"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberZipCode" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"zipCode": "${#Project#zipCode}",
"firstName": "${#Project#firstName}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="45172631-5144-460e-9de1-78cb07164f90" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="ba0d4e75-4224-4eb0-b0bc-656a09994b1d" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4fe0fba1-a2be-4f0b-a70a-024b31d6ae09" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MemberTypeUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="55f91d75-e29e-4312-a3f1-eecd051c475a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberType" id="f409560b-f44b-4707-821d-e4d8a04fc37c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberType" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"type": "jsjkl"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>message</path><content>Invalid MemberType</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deleteMemberDetails" id="760370b0-3f6d-41c2-8259-2de5f17a1f62" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="f74b2ec5-403b-4cf4-9a0b-5fd80b81aa22" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d5f92641-f07e-4e53-b235-cf7c24b9c68a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EnrollSourceUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="ea705963-3b57-4e2b-9ee7-9a0fae418297"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="updateMemberDetails" id="e08a5f0f-c2a4-4e1b-a845-f6ffbbfc4077"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="updateMemberDetails" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"enrollSource": "hguu2"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="05f52fda-ec3b-49fd-9290-49f277b38759" name="JsonPath Match"><con:configuration><path>message</path><content>Invalid EnrollSource</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deleteMemberDetails" id="70d5fa99-b92b-4ae1-96e1-8e785a164fed" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="58228a8b-1889-4c8b-94be-3eabbdf48923" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="636010ee-8b4e-4b95-b7ff-4f3beedd4e70" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EnrollLocationUpdate-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="6bd043c8-8eba-4fff-9243-082c48cbfc8f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDetails" id="43ac3bcc-80b8-43b4-a0b7-e22ff74b2152"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDetails" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"enrollLocation": "dfh"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="61302ca3-55d9-48d7-9409-aaeb4d7f3351" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deleteMemberDetails" id="ca7a730d-a3cc-4290-9a64-b0a98ba0f650" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="3ec79e59-d8a5-4048-b012-1671f58a82a3" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="527b0fbe-3236-4e93-9395-211c7068e920" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Member - DOB greater than Current Date" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="e02eba43-7c9e-4d50-aac3-53faf2d80738"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
//assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="RegenerateRandomProperties" id="0d0019bf-1f4c-41f6-ba92-d302e7b3f73d"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (2018 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt;= 12 ) ? "2" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "1" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info(dob+"T02:25:00.000Z")

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob+"T02:25:00.000Z" )


// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberDOB" id="90b72537-3c58-4fdd-9c44-8a92e63f4d64"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberDOB" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{

  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}"
  
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="ad9cd93c-23c2-42a4-aeb6-0c1b452e8b9d" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="e3690e41-f4d9-4aa9-8abf-d7cc236ae4c8" name="Members-Updated Member - NegativeCases"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="17f7830d-9369-4406-a91b-86d24b007da0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateProgram" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="b52732c6-ac44-4984-a113-d9eecf04ffe5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberProgram" id="fe5b5156-6038-4217-8b06-10937eafade9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberProgram" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
	"program": "58abdc77cae5f70004f4627d"
}
</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="dd1ee963-12f7-42b3-98c1-c10b3837f608" name="Invalid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="093039b7-e46c-4fed-a92d-b265e2eba67a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLoyaltyIdCode" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="1ea438c5-21cd-4f7f-9262-4d70578a0053"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberLoyaltyIDCode" id="ebf1bbab-bbf2-4140-91f4-434b401936ba"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberLoyaltyIDCode" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "2djdhu3"  
    }]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="f0e8fd4e-528b-43e3-b684-9c5ebcf71df5" name="JsonPath Match"><con:configuration><path>message</path><content>Program not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="1a97595c-1aa0-42e9-8df5-41a08666b984" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLoyaltyIdName" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="20b06d0a-a64b-42ea-8659-14e3dbb30b43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberLoyaltyIDName" id="7349b0ab-3727-4f4c-b6a8-c77d5f0ed8ad"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberLoyaltyIDName" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"loyaltyIDs": [
    {
      "name": "Facebook profile",
      "code": "${#Project#loyaltyCode}"  
    }]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="1feb6a41-7bb6-491a-bbe7-58b068e2841f" name="JsonPath Match"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="309456f0-9eac-4927-90fd-410b30b1392d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateReferralCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="38ce9c90-44a7-4d0e-89d3-3d819cc91ae9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberRefferalCode" id="e2653c75-b69c-4f52-a6bf-27f91f891740"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberRefferalCode" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
 "referrals": "SkUfMvFFe"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="cb701a31-a561-404e-826b-09e5db38dfc2" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="a390e481-19b4-4034-9102-8c5e0c12bcb0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateUniqueID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateMember" id="c9529b35-9f8e-4a5b-946b-9b7777b1d94a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members-Create Member"].testCases["CreateMemberAllColumns"]

def runner = tc.run( null, false )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMemberUniqueID" id="e201ead4-d06f-44c3-8e5d-e9e4f1e4171f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="UpdateMemberDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMemberUniqueID" id="14f65e53-22d0-443c-ba2e-6ce92c3bf66e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"uuid": "fc24f360-f7ff-11e6-969f-f918df259674"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="JsonPath Match" id="1feb6a41-7bb6-491a-bbe7-58b068e2841f" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="e03918e0-fd96-4f59-a54f-52547f7e1196" name="Programs-CreateRewardPolicy"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2ab9f543-7c4a-49d9-a852-22bc190b95d5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateRewardPolicy-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="c9f7f020-b6cf-4e2d-a060-67623c55653a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="1a7cebc9-ad4c-4ed9-b3a6-daa742043935"><con:settings/><con:config><script>def name ="rn"   //initializing the variable

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def rewardName = name+randomValue
testRunner.testCase.testSuite.project.setPropertyValue( "rewardName", rewardName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateRewardPolicy" id="c6d50015-879e-4fb5-bbef-1a769d8a6daa"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewardpolicies" methodName="CreateRewardPolicies" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateRewardPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{  
	"name":"${#Project#rewardName}",
    "program":"${#Project#programId}",
    "org": "${#Project#orgId}",
    "expirationHours":168,
    "expirationSnapTo":"day"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewardpolicies</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="88609907-6d6c-466a-adb1-96f52a2c1bde" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferrewardpolicyID" id="27990a98-1592-4620-8b2a-781a15fc27b6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>rewardpolicyID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateRewardPolicy</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>rewardid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>rewardName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateRewardPolicy</con:sourceStep><con:sourcePath>name</con:sourcePath><con:targetType>rewardName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0769cec6-92e6-4903-9479-6f52c3e677bf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createRewardPolicy-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="b83eef93-957d-4e01-a3aa-372bcb2ea43d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="081c2daa-9ab3-4e7a-a7b1-a0e18fdec3ad"><con:settings/><con:config><script>def name ="rn"   //initializing the variable
def desc ="desc"
def uses ="0"
def expire = "0"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def rewardName = name+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 10 )
def rewardDesc = desc+randomValue
randomValue = generator( ('0'..'9').join(), 2 )
def usesLeft = uses+randomValue
randomValue = generator( ('0'..'9').join(), 3 )
def expHours = expire+randomValue
 
testRunner.testCase.testSuite.project.setPropertyValue( "rewardName", rewardName )
testRunner.testCase.testSuite.project.setPropertyValue( "rewardDesc", rewardDesc )
testRunner.testCase.testSuite.project.setPropertyValue( "usesLeft", usesLeft )
testRunner.testCase.testSuite.project.setPropertyValue( "expHours", expHours )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateRewardPolicy" id="e5526b26-f301-4eb3-ad6d-774849d5825f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewardpolicies" methodName="CreateRewardPolicies" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateRewardPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{  
	"name":"${#Project#rewardName}",
    "program":"${#Project#programId}",
    "org": "${#Project#orgId}",
    "expirationHours":"${#Project#expire}",
    "expirationSnapTo":"day"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewardpolicies</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="88609907-6d6c-466a-adb1-96f52a2c1bde" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferrewardpolicyID" id="0bccb011-72a5-4fb7-87f8-a106e158800e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>rewardpolicyID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateRewardPolicy</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>rewardid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="f74def25-8a00-4ec3-bfb1-63b9d77f8b51" name="Member Rewards - Read All Rewards"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="dc65079a-e0ce-4fb1-8066-a6d87bb48cd0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Read All Rewards" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="2a09f500-9c8a-40e3-bd73-7a32d87cf592"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="restrequest" name="Read All Rewards" id="923c2e32-61b4-4797-9bb0-7b6d83d08860"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Read All Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Read All Rewards" id="ae942974-9ad7-400c-81fe-0f23cbc8ed88" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58afe73731f8ef000467ac1c</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="acf0f1fa-5ec3-46c9-b0c7-38833cb32385" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="2bf9ab59-f5a1-4e5f-bfdb-c63a0eebee6b" name="Members - Add Rewards"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2572c8f7-2867-4dbd-a69b-f211d3fefe1a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="4080dc26-dd2d-4b15-9097-d9dd1d5f9ff2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="5ec7b604-3b6f-40d8-ab06-96ee03b47442"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="e7cef82b-f5ee-46a8-93cd-93154138809c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="14f506fb-e8bf-400d-a47a-33cf3cf42024"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Generate Reward Inputs" id="82f67cb4-8ac6-47ce-aafc-b1083e3a837a"><con:settings/><con:config><script>def code =""
def ul =""
def desc =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (2016 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )


randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 10 )
def rewardDesc = desc+randomValue
log.info(rewardDesc)
testRunner.testCase.testSuite.project.setPropertyValue( "rewardDesc", rewardDesc )
randomValue = generator( (('0'..'9')).join(), 1 )
def usesLeft = ul+randomValue
log.info(usesLeft)
testRunner.testCase.testSuite.project.setPropertyValue( "usesLeft", usesLeft )
randomValue = generator( (('0'..'9')+('a'..'z')).join(), 6 )
def rewardCode = code+randomValue
log.info(rewardCode)
testRunner.testCase.testSuite.project.setPropertyValue( "rewardCode", rewardCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="9b2b8ae7-489c-4b7b-ad5b-3c53a40640eb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":1,
"name":"${#Project#rewardName}",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d3a9762e-4306-4cf0-99eb-6073a9c2b9b9" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="243cf79a-51d1-4994-a417-efefb1d8985e" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c892e1a0-7538-470f-838d-d97301f05e36" name="JsonPath Match member"><con:configuration><path>member</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Reward Properties" id="8a4542cb-29d8-409a-b463-2968434af165"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>MemRewardID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Add Reward</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memRewardId</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get Created Reward" id="b084eae3-d50b-465b-9840-9c163302c0be"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Read Reward by Id" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Created Reward" id="4408524a-2b5c-4253-887f-9e47ba6b2411" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3ce6b1a470e0004ecd657</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b08e432-590f-4ce6-8653-13c96abb748a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5dd45736-0ce5-4bc7-bc64-0dfadab7f936" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a4a57ac4-5569-46de-8618-f8249edd6a89" name="JsonPath Match member"><con:configuration><path>member</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete Member Reward" id="9b7cd62e-e484-4cc0-8c6e-a5b2de69eb85" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Delete Member Reward" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Member Reward" id="e8549401-4857-437d-a325-bebbc326dee3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3d8cb1a470e0004ecd68b</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a3d4db34-9f5b-40ce-9ec3-f6a961ef4cef" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="dcf805dd-2e45-47c9-9e18-03084351826b" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="bfb2817e-3503-4002-b33f-ef46930f00be" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="6dca592c-acc0-4814-bc89-999fe29b629a" name="Members - Add Rewards - NegativeCases"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b60ffa33-ed4b-4561-bfeb-07b315aeed42" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Customized Name" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="cf5230f7-b85a-48be-a3a1-3e04dbf806ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="8a9699da-542c-4903-87d6-506584c453f0"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="7f1c7a26-11f2-49a7-b967-87a4bef1baf0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="1b21b0b5-5f28-4f65-b7df-137c130b6676"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="994cdb77-0d95-4714-aadf-cdf79a0a3c6f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":1,
"name":"vimala's reward",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1c57b613-a3bb-4973-a3a5-8b64f221fba3" name="Invalid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="401e4938-32b8-4f00-a2f9-8e6efc92aa2e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Program as null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="cf7f9b0f-92ff-4762-a441-897c77d436da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="a8f679f9-160c-43d3-8065-9537ae3d4050"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="8c78ad1e-7de2-4e24-b606-73298777d343"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="f607236f-333c-425d-a6f3-be3a532ab899"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="d7d1bc98-efb8-4563-b350-52399a4b2a9f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"",
"usesLeft":1,
"name":"${#Project#rewardName}",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="7eeed913-b717-4d2f-9b9a-5b493545ee03" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c1778407-4312-4efd-a0f6-ea9d9424622f" name="JsonPath Match status"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2d3009ae-6dec-4919-8c36-3a9ef858ca88" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Name as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="76e15d97-3445-4989-8737-b313efc6c91d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="72abd0c8-5956-4aa9-964b-77bfd563cc97"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="9d66bff3-d41a-4a84-b68f-a55e9fe4a89e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="0a0cba0a-45d6-4512-8539-171c937ac5d5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="c82bffab-dc44-4269-8450-c5ed5cfc58e1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":1,
"name":"",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="a9caa509-4545-43ed-98ec-5566ca304593" name="JsonPath Match"><con:configuration><path>.message</path><content>[Validation Error, Path `name` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="429f37ce-73c5-4282-b4a9-6a809579e47b" name="JsonPath Match status"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b9686e2c-7bcd-4610-9163-8e0fb3844fd0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Member as Null" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="a444af49-b728-4790-824e-9c1c501332e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="2704f812-3085-4993-bab8-64f376b60d4d"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="c7be8e66-7394-43a9-99ce-cfad067c860f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "58b513e617b7207a6f546264",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="dbfad7fd-7362-4f93-97eb-b55159cdc4d3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="c7aec336-f48c-4652-beaa-3783f45d815b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":1,
"name":"${#Project#rewardName}",
"desc":"free item",
"code":"0",
"org":"58b513e617b7207a6f546264"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="a9caa509-4545-43ed-98ec-5566ca304593" name="JsonPath Match"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="429f37ce-73c5-4282-b4a9-6a809579e47b" name="JsonPath Match status"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6c2d09d8-0806-4978-b3b5-c8341268102c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Invalid Uses Left" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="480b8cfd-8043-4a39-a009-37f3d81feef9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="0721f9e0-23c4-47ad-9e1b-6415523b45ec"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="f1d96a69-c48e-4168-bf31-425ae80656d9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="74738301-8579-41f4-9c11-a8b7ff216d5f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Generate Reward Inputs" id="57bcb1c9-3786-4b16-8bc6-69d7edb51dc1"><con:settings/><con:config><script>def ul =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 101 )
def usesLeft = ul+randomValue
log.info(usesLeft)
testRunner.testCase.testSuite.project.setPropertyValue( "usesLeft", usesLeft )

</script></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="aaf09eeb-d862-4bb6-8525-12d34d0e9194"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":"${#Project#usesLeft}",
"name":"${#Project#rewardName}",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="f03aeec9-7ae5-47f4-812e-f0fc715ce14e" name="JsonPath Match"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e1ce3c1b-9bbd-4e3b-ad76-76c81ce13bf7" name="JsonPath Match message"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9bb62120-bf04-40a4-9bbe-7918619f825b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - past expiresOn date" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="f8dd3839-6d63-4582-9662-39b7af0ab64f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="475470d6-eded-4714-913f-6a9397dc72a4"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="d410c6d7-b2c5-4a0c-ab47-c2956a0191b6"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="cf0b56f1-911e-4488-85f4-3d9c55c871c1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Generate Reward Inputs" id="4cf91293-eb7f-4697-bfc5-47b7c9c7a739"><con:settings/><con:config><script>def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def year = (1960 + random.nextInt(10))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

expiresOn = (year + '-' + xmonthx + '-'+ xdayx)
log.info(expiresOn+"T02:25:00.000Z")
testRunner.testCase.testSuite.project.setPropertyValue( "expiresOn", expiresOn+"T02:25:00.000Z" )
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="f3e3b673-bfe3-4c50-9804-ae227880bca1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"${#Project#expiresOn}",
"program":"${#Project#programId}",
"usesLeft":"${#Project#usesLeft}",
"name":"${#Project#rewardName}",
"desc":"free item",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="f03aeec9-7ae5-47f4-812e-f0fc715ce14e" name="JsonPath Match"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e1ce3c1b-9bbd-4e3b-ad76-76c81ce13bf7" name="JsonPath Match message"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ca3cfd0d-1be6-4f62-90d7-d91de5d84ce6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Invalid Code" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="af94994a-bbe7-49f0-93a8-e4d67fff425f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="54a7324a-b741-4671-a38e-1f47f288d528"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="71ef07a1-cc78-4229-be22-40730dc7a7aa"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="de421af5-5204-4e65-a6ce-358f83e41c40"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Generate Reward Inputs" id="501a5689-3225-46ba-bdf9-395347f42614"><con:settings/><con:config><script>def code =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')+('a'..'z')).join(), 101 )
def rewardCode = code+randomValue
log.info(rewardCode)
testRunner.testCase.testSuite.project.setPropertyValue( "rewardCode", rewardCode )

</script></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="3165a90e-8246-4f21-bcec-2f03d999cb9e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":"${#Project#usesLeft}",
"name":"${#Project#rewardName}",
"desc":"free item",
"code":"${#Project#rewardCode}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="f03aeec9-7ae5-47f4-812e-f0fc715ce14e" name="JsonPath Match"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e1ce3c1b-9bbd-4e3b-ad76-76c81ce13bf7" name="JsonPath Match message"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e733a679-d2c4-4f05-8be3-c63fb0aca48d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Reward - Invalid Desc" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling create reward policy" id="617ec0a2-00e7-4d47-adc4-6c980021297b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateRewardPolicy"].testCases["CreateRewardPolicy-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="49c07834-b3ab-40e6-abdf-c755ffdb4365"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMember" id="76b1bbf3-38f2-4251-8633-cdcc2bca574a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMember" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}",
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
    }
  ]
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="75b88574-9f50-4278-9023-1fcaa0626db0" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="7c6fd927-2cd0-4ff3-9126-923ef7b6b01f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMember</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Generate Reward Inputs" id="f17cdbfb-493c-44e2-b7ed-4b1b0ffc3ed6"><con:settings/><con:config><script>def desc =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 251 )
def rewardDesc = desc+randomValue
log.info(rewardDesc)
testRunner.testCase.testSuite.project.setPropertyValue( "rewardDesc", rewardDesc )

</script></con:config></con:testStep><con:testStep type="restrequest" name="Add Reward" id="2ebb7793-738a-40c9-8906-0de90358d4fb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards" methodName="Add Rewards" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Reward" id="49e39183-3130-402e-955c-4d2372594e50" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
"member":"${#Project#memberId}",
"effectiveDate":"${#Project#createdAt}",
"expiresOn":"2017-03-18T18:30:00.000Z",
"program":"${#Project#programId}",
"usesLeft":"${#Project#usesLeft}",
"name":"${#Project#rewardName}",
"desc":"${#Project#rewardDesc}",
"code":"0"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards</con:originalUri><con:assertion type="JsonPath Match" id="f03aeec9-7ae5-47f4-812e-f0fc715ce14e" name="JsonPath Match"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e1ce3c1b-9bbd-4e3b-ad76-76c81ce13bf7" name="JsonPath Match message"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="cdbf41cb-1aa2-4a8f-9338-4c850f32443e" name="Members - Update Rewards"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e4a4b72e-2a39-42c3-b056-d10277d5159d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Reward - Desc" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling Add Reward" id="361e592f-e7fb-451f-a200-39bf9c49f9ab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members - Add Rewards"].testCases["Add Reward"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random UsesLeft" id="11d94adb-15aa-4050-a43a-05ae1dba6791"><con:settings/><con:config><script>def desc =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 10 )
def rewardDesc = desc+randomValue
log.info(rewardDesc)

testRunner.testCase.testSuite.project.setPropertyValue( "rewardDesc", rewardDesc )
</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Member Reward" id="37dc7292-f8f7-49c3-bbc6-21283e2b94ef"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Update Member Reward" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Member Reward" id="134889a7-1bd8-4786-b0ff-400346a1adce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{

"desc":"${#Project#rewardDesc}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3cf5d1a470e0004ecd667</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ed4af27a-f151-4bb1-8ee3-3c6d51a10b8e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Reward" id="864ff229-b76f-42fa-a5cf-14196829a58e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Read Reward by Id" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Reward" id="4408524a-2b5c-4253-887f-9e47ba6b2411" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3ce6b1a470e0004ecd657</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b08e432-590f-4ce6-8653-13c96abb748a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01d07dac-2236-4ea8-8a0e-0cdf3e03b095" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8aa1ebf7-c7a0-4bfa-beba-6c3752663ffc" name="JsonPath Match member"><con:configuration><path>member</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete Member Reward" id="30bb5776-fba5-4aed-8a38-e5adc1f68e7d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Delete Member Reward" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Member Reward" id="e8549401-4857-437d-a325-bebbc326dee3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3d8cb1a470e0004ecd68b</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a3d4db34-9f5b-40ce-9ec3-f6a961ef4cef" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="3dd46f27-9401-4c40-89b8-7fa82e8f756a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="e581753b-1d8c-47b2-8cee-11c7666a2456"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c5f07e7-8e91-433e-b344-3a455a051cb3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Reward - UsesLeft" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling Add Reward" id="96eab782-70fc-430c-aee0-6c491fb6bdfa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Members - Add Rewards"].testCases["Add Reward"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random UsesLeft" id="4bdc3e3d-f2f7-45b6-9aa7-4419a4cb20fe"><con:settings/><con:config><script>def ul =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomValue = generator( (('0'..'9')).join(), 1 )
def usesLeft = ul+randomValue
log.info(usesLeft)

testRunner.testCase.testSuite.project.setPropertyValue( "usesLeft", usesLeft )
</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Reward UsesLeft Column" id="d028dc40-2028-45b1-8cb3-42b48b5ed452"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Update Member Reward" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Reward UsesLeft Column" id="134889a7-1bd8-4786-b0ff-400346a1adce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{

"usesLeft":"${#Project#usesLeft}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3cf5d1a470e0004ecd667</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ed4af27a-f151-4bb1-8ee3-3c6d51a10b8e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="46ed5f92-ebd0-4924-b63f-762b1fab414c" name="JsonPath Match"><con:configuration><path>usesLeft</path><content>${#Project#usesLeft}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Updated Reward" id="7161afb6-cb76-458b-a554-0e03960fd1dc"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Read Reward by Id" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Updated Reward" id="4408524a-2b5c-4253-887f-9e47ba6b2411" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3ce6b1a470e0004ecd657</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b08e432-590f-4ce6-8653-13c96abb748a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01d07dac-2236-4ea8-8a0e-0cdf3e03b095" name="JsonPath Match"><con:configuration><path>program</path><content>${#Project#programId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8aa1ebf7-c7a0-4bfa-beba-6c3752663ffc" name="JsonPath Match member"><con:configuration><path>member</path><content>${#Project#memberId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete Member Reward" id="214cc17c-f8c5-470f-b812-5e6bd94f7cdc"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rewards/${#Project#memRewardId}" methodName="Delete Member Reward" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Member Reward" id="e8549401-4857-437d-a325-bebbc326dee3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rewards/58b3d8cb1a470e0004ecd68b</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a3d4db34-9f5b-40ce-9ec3-f6a961ef4cef" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMemberDetails" id="9b2f8158-9ab3-4cd8-9cd1-19ad520b22f5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMemberDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteProgramDetails" id="b297d0d4-29f3-4588-bce3-d0f557750f48"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Programs/${#Project#programId}" methodName="deletePrograms" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteProgramDetails" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/588083f3fde7a00004855ca9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="954450e8-07c6-41ed-835b-d74209c39c7e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="be330597-0c01-4b46-b2d0-accf2c7ff9bf" name="Programs-CreateTierPolicy"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ce1e5a8e-8e99-494b-931b-6acb5f639684" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateTierPolicy-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="013e8764-f3e7-45a0-9429-466e385038fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="c0ad3544-8674-4843-8543-8b58abd1321c"><con:settings/><con:config><script>def name ="tn"   //initializing the variable
def lname="ln"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def tierName = name+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def levelName = lname+randomValue
testRunner.testCase.testSuite.project.setPropertyValue( "tierName", tierName )
testRunner.testCase.testSuite.project.setPropertyValue( "levelName", levelName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="Create TirePolicy" id="75a72722-69e9-4290-9910-b8ccdcd39fa1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" methodName="CreateTierPolicy" resourcePath="/api/v1/tierpolicies" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create TirePolicy" id="941b67e9-0164-44c1-84d2-850091f2227a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request> {
    "name": "${#Project#tierName}",
    "program": "${#Project#programId}",
    "org": "587da3c9613e4c5cfefd109b",
    "levels": 
      {
        "name": "${#Project#levelName}"      
      }
 }
   </con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/tierpolicies</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransfertierpolicyID" id="d06f9e59-0cee-403f-af91-8528e59d0a32"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tierpolicyID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create TirePolicy</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>tierpolicyID</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get TierPolicy" id="a429a299-ac55-40a3-86d0-6cc050dda3a3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/tierpolicies/${#Project#tierpolicyid}" methodName="GetTierPolicyByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get TierPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/tierpolicies/58b51b0b58cfcf0004d3dba3</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6316edb2-fac0-4d04-93c6-128ea53de632" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="79e771c7-57c8-4478-a5db-812ef37f25c1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateTierPolicy-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="a9f8c80d-97a8-4c44-bc6b-bdc49d655d62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="97220a65-606c-42ea-83b8-0588a01c7910"><con:settings/><con:config><script>def name ="tn"   //initializing the variable
def lname="ln"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def tierName = name+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def levelName = lname+randomValue
randomValue = generator( ('0'..'9').join(), 2 )
def levelExpHours = randomValue
log.info(levelExpHours)
testRunner.testCase.testSuite.project.setPropertyValue( "tierName", tierName )
testRunner.testCase.testSuite.project.setPropertyValue( "levelName", levelName )
testRunner.testCase.testSuite.project.setPropertyValue( "levelExpHours", levelExpHours )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateTierPolicy" id="8e69abf1-d16d-4a9b-8d18-efbd561d5ba6"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" methodName="CreateTierPolicy" resourcePath="/api/v1/tierpolicies" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateTierPolicy" id="941b67e9-0164-44c1-84d2-850091f2227a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request> {
    "name": "${#Project#tierName}",
    "program": "${#Project#programId}",
    "org": "58b513e617b7207a6f546264",
    "primary": false,
    "levels": 
      {
        "name": "${#Project#levelName}",
        "defaultLevel": true,
        "expirationHours": "${#Project#levelExpHours}",
        "expirationSnapTo": "day",
        "activityBasedExpiration": false   
      }
     
 }
   </con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/tierpolicies</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferTierPolicyID" id="93a5681d-8170-431f-a575-13d53dcd827f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tierpolicyID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateTierPolicy</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>tierpolicyID</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetTierPolicy" id="41f8966f-3a0b-401d-a3f1-880a81860a88"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/tierpolicies/${#Project#tierpolicyid}" methodName="GetTierPolicyByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetTierPolicy" id="6e6ef4b8-80f0-448c-9f9c-551e7207d359" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/tierpolicies/58b51b0b58cfcf0004d3dba3</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6316edb2-fac0-4d04-93c6-128ea53de632" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="52ec20ed-82a9-4dee-8781-aaeab1363b90" name="Members-Tiers"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6da12689-2cbf-4695-9804-47688dfb53af" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Read Member Tiers" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateTierPolicy" id="510af4d8-00e2-4d0a-94e4-f3e64123df64"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreateTierPolicy"].testCases["CreateTierPolicy-AllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="9512e4ef-9bc8-456b-98a8-47682df6067b"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Member" id="a8c1a6ee-be6a-4ac5-9bc8-03858411cdb4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Member" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"  
    }]
}

  
  
</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="d34edecc-3cdd-4e4d-87b3-ff53ce9b5419"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create Member</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create Member</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create Member</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Read Member" id="332099f5-aff9-4253-9371-b6ed0c4de124"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Read Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="8538fa00-c86b-4b4b-a3db-a9bd486fafc8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7900f968-8866-4f6a-97e2-31ed5d246992" name="JsonPath Match"><con:configuration><path>.tiers.name</path><content>[${#Project#tierName}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="26ec2506-bbda-48e6-99a5-3c60b5b46b03" name="Programs-CreatePursePolicy"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e0aca16c-3912-4c10-8f8f-a8725066a51e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreatePursePolicy-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="f4b2bffa-a21e-4f18-a7e3-96ee39efff55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="055bb3ad-c5dc-4cac-9e3f-5a720d7ac4da"><con:settings/><con:config><script>  //initializing the variable

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def purseName = randomValue
testRunner.testCase.testSuite.project.setPropertyValue( "purseName", purseName )
log.info(purseName)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreatePursePolicy" id="f68716f8-6b71-4158-8b93-8c775a7d0279"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/pursepolicies" methodName="CreatePursePolicies" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreatePursePolicy" id="d2682a0b-69b4-4f06-b021-fcfc01b11193" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#purseName}",
    "program": "${#Project#programId}",
    "org": "58b513e617b7207a6f546264"
  }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1440b438-02cd-4d0d-b538-2e4ccdf84edf" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferpursepolicyID" id="97ab2092-03eb-4c47-8b13-a7cef9bab972"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pursepolicyID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreatePursePolicy</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>pursePolicyID</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedPursepolicy" id="f18c7a12-815c-4874-bf55-34dd7967ff9d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/pursepolicies/${#Project#pursepolicyid}" methodName="GetPursePolicyByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedPursepolicy" id="181ff191-cc2f-49df-82d7-32225415d74f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/pursepolicies/58aada4ccae5f70004f44e62</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7199c0ed-ce25-4897-b731-17f1a52c14d5" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e81907a7-76da-42b2-92e1-2552f6b70bd3" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#purseName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5e49136a-0bd5-41de-b22a-35210f355f4d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreatePursePolicy-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateProgram" id="84379a9f-7226-449e-8fa7-de33e4d5f51d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-Create Program"].testCases["CreateProgram"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="9f396c29-20e8-47f9-81a2-fda57e99a0d8"><con:settings/><con:config><script>def name="pn"  //initializing the variable
def desc="desc"

def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def purseName = name+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def purseDesc = desc+randomValue
randomValue = generator( ('0'..'9').join(), 2 )
def purseExpHours = randomValue
randomValue = generator( ('0'..'9').join(), 2 )
def purseEscrowDays = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "purseName", purseName )
testRunner.testCase.testSuite.project.setPropertyValue( "purseDesc", purseDesc )
testRunner.testCase.testSuite.project.setPropertyValue( "purseExpHours", purseExpHours )
testRunner.testCase.testSuite.project.setPropertyValue( "purseEscrowDays", purseEscrowDays )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreatePursePolicy" id="111230ec-0bf0-42ab-bf67-1361beeedce7"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/pursepolicies" methodName="CreatePursePolicies" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreatePursePolicy" id="d2682a0b-69b4-4f06-b021-fcfc01b11193" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#purseName}",
    "desc": "${#Project#purseDesc}",
    "expirationHours": "${#Project#purseExpHours}",
    "escrowDays": "${#Project#purseEscrowDays}",
    "activityBasedExpiration": false,
    "expirationSnapTo": "day",
    "escrowSnapTo": "day",
    "primary": false,
    "program": "${#Project#programId}",
    "org": "58b513e617b7207a6f546264"
  }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1440b438-02cd-4d0d-b538-2e4ccdf84edf" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferpursepolicyID" id="e780d8f0-53e8-4e9d-911d-422d532b5e1d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pursepolicyID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreatePursePolicy</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>pursepolicyID</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedPursepolicy" id="4f50d3f3-4dc1-4495-bde2-f2dd18756815"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/pursepolicies/${#Project#pursepolicyid}" methodName="GetPursePolicyByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedPursepolicy" id="181ff191-cc2f-49df-82d7-32225415d74f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/pursepolicies/58aada4ccae5f70004f44e62</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7199c0ed-ce25-4897-b731-17f1a52c14d5" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e81907a7-76da-42b2-92e1-2552f6b70bd3" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#purseName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="fb566b17-e631-492a-8651-bb2040abc3ee" name="Members-Purses"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5deeff91-e3af-4917-8b68-384315ac9c32" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Read Members Purses" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Calling CreatePursePolicy" id="3e2345ea-4949-4ecc-b7e9-bc111c3c72a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Programs-CreatePursePolicy"].testCases["CreatePursePolicy-AllColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="1391ada4-021c-422a-b22e-749f4673d280"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"
def em = "em"
def ph = "+1 "
def add=""
def stno=""
def city =""
def state =""
def country =""
def zip =""
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
// random value for first name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
// random value for last name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue
// random value for email 
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def email = em+randomValue
// random value for phone number
randomValue = generator( (('0'..'9')).join(), 10 )
def cellPhone = ph+randomValue
// random value for address
randomValue = generator( (('0'..'9')).join(), 3 )
def street = stno+randomValue
randomValue = generator( (('A'..'Z')+(' '..' ')+('a'..'z')).join(), 5 )
def address = add+randomValue
def addressValue = street+address
// random value for city name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def cityName = city+randomValue
// random value for state name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def stateName = state+randomValue
// random value for country name
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 6 )
def countryName = country+randomValue
// random value for zipcode
randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = zip+randomValue

//log.info(zipCode)
//log.info(countryName)
//log.info(stateName)
//log.info(cityName)
//log.info(addressValue)

//test runners for all columns

testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )
testRunner.testCase.testSuite.project.setPropertyValue( "email", email+"@gmail.com" )
testRunner.testCase.testSuite.project.setPropertyValue( "cellPhone", cellPhone)
testRunner.testCase.testSuite.project.setPropertyValue( "addressValue", addressValue )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )

// random value for loyalty code
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )

//random value for DOB
def random = new Random()
def xxx = { String alphabet, int n ->   
new Random().with {(1..n).collect 
{ alphabet[ nextInt( alphabet.length() ) ] }.join()   } }  

def dobyear = (1960 + random.nextInt(31))
def xmonthx = random.nextInt(13)
def xdayx = random.nextInt(31)
xmonthx = ( xmonthx &lt; 10 ) ? "0" + xmonthx : "" + xmonthx
xdayx = ( xdayx &lt; 10 ) ? "0" + xdayx : "" + xdayx

if(xmonthx == '00'){
	xmonthx = '01'
}
if(xdayx == '00'){
	xdayx ='01'
}

dob = (dobyear + '-' + xmonthx + '-'+ xdayx)
log.info"DateofBirth $dob"
testRunner.testCase.testSuite.project.setPropertyValue( "dob", dob )

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Member" id="5eb9f3df-cec8-497a-9dce-1d20ccae1542"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Member" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "enrollSource": "Campaign 1",
  "enrollLocation": null,
  "enrollChannel": "Web",
  "acquisitionChannel": "Web",
  "program": "${#Project#programId}",
  "type": "Individual",
  "firstName": "${#Project#firstName}",
  "lastName": "${#Project#lastName}",
  "dob": "${#Project#dob}",
  "address": "${#Project#dob}",
  "city": "${#Project#cityName}",
  "state": "${#Project#stateName}",
  "country": "${#Project#countryName}",
  "email": "${#Project#email}",
  "cellPhone": "${#Project#cellPhone}",
  "zipCode": "${#Project#zipCode}",
  "loyaltyIDs": [
    {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"  
    }]
}

  
  
</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="b20c9e0b-4f76-4440-909f-b2445633a8df"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create Member</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>CreatedAt</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create Member</con:sourceStep><con:sourcePath>createdAt</con:sourcePath><con:targetType>createdAt</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create Member</con:sourceStep><con:sourcePath>uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Read Member" id="b4e7622f-294d-4029-a9ed-1aa6a157b756"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#MemberID}" methodName="GetMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Read Member" id="70a9ebb9-0799-4e30-b9e5-96c8daa01b73" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58874784bc6e54000426d465</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5a561404-a635-4bab-b1ae-87e3decaaa5d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a43fa58e-7986-4749-b4de-a9eb10af6fad" name="JsonPath Match"><con:configuration><path>.purses.name</path><content>[${#Project#purseName}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="f96752f3-9394-467d-8d05-dd723d8f662f" name="ReferenceData-GetOrganization"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2296d6bb-dcf1-491a-9386-a879e7c34a03" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetOrganizationDetails" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="ff2df4ca-4691-4d03-8a1b-bc4dc1482b97"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="GetOrganizationDetails" id="ac8b28a1-c31a-4592-b30f-b6cb2ddb27af"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/orgs" methodName="GetOrgs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetOrganizationDetails" id="50598de8-c1c9-4047-8c9a-f8f546ac068b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer  ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/orgs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93e304c7-a8d1-46c1-9558-eda11c0fb74a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="64ef92d7-9559-4676-b9ae-0ddc807821e7" name="ReferenceData-CreateSegments"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e9faeb97-0078-483e-a598-7a03fa5a0d33" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateSegments-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="a3013a6c-2ee5-48b3-953a-c3b5117abb9a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="eaccd624-deda-48f2-ba65-beb950cf586b"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def description = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def type = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
//testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
//testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="636071ac-d89b-45af-a847-8164643ecfc4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "org": "${#Project#orgId}"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7d00e6b0-ac00-4106-8e56-10901437da0a" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a513c283-16e1-4ede-ab30-de4f8f431842" name="SegmentNameAssertion"><con:configuration><path>name</path><content>${#Project#segmentName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="88a61cc9-fb48-4bd8-9606-9eb83524dad0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>segmentid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateSegments</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>segmentid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>segmentname</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateSegments</con:sourceStep><con:sourcePath>name</con:sourcePath><con:targetType>segmentName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedSegment" id="d7a62a4a-c8d2-4194-ad5a-b32a35e78ff3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedSegment" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58aad2fdcae5f70004f44e55</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="13c6a124-4828-4d4b-b48b-8ddc53034234" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ad505322-75d1-4f8b-9929-2139c1c3bf7d" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#segmentname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedSegment" id="669dbe08-ef41-46a3-a40a-5e53460cc85f" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="DeleteSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedSegment" id="62a30b33-44b5-4421-bab2-8985983e297e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58ad37ef3915f100048b6bbb</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="590d87f4-55a5-48d6-ae8c-66490752b52e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ebffe79f-0bd3-4d39-95e8-98a039b83be8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateSegments-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="b7b5cb15-9878-4419-973a-64e729b26432"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="65211c18-a9b8-4426-a759-eae9b2f96e80"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def type = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="adb6e081-e0f6-494c-a153-c311f06ae034"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "description":"${#Project#description}",
    "type": "${#Project#type}",
    "effectiveDate": "2017-02-08T20:44:54.933Z",
    "expirationDate": "2018-03-04T19:00:45.402Z",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7d00e6b0-ac00-4106-8e56-10901437da0a" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e58ca717-e9f3-45fc-8dd9-e77b7f79cff1" name="SegmentNameAssertion"><con:configuration><path>name</path><content>${#Project#segmentName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="dffd5122-ac38-422f-8709-b18ffc94b6dc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>segmentid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateSegments</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>segmentid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedSegment" id="69dcdd97-0e02-472c-9ca0-f14ce45ba031"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedSegment" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58aad2fdcae5f70004f44e55</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="13c6a124-4828-4d4b-b48b-8ddc53034234" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ad505322-75d1-4f8b-9929-2139c1c3bf7d" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#segmentname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedSegment" id="ea2e7078-33d9-42b1-8179-8ec660343104"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="DeleteSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedSegment" id="62a30b33-44b5-4421-bab2-8985983e297e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58ad37ef3915f100048b6bbb</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="590d87f4-55a5-48d6-ae8c-66490752b52e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="77ca985e-5bca-4f24-ade9-7e987ef45e04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateSegmentNameLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="af8157f5-54b4-4bef-aecd-83986c7e850a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="5f396ce4-0e92-41a7-8704-b47cbafffca1"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 50 )
def segmentName = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="fa33cec5-836b-4038-aa7e-b94cbbd420ac"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "org": "58b513e617b7207a6f546264"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="afc5736d-2844-4a90-99f6-d34c7007c136" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4b24d1ab-bc35-431b-9d34-fbf1543d2579" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#segmentName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a89c375e-d4d7-43ba-8509-7b3232815f69"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>segmentid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateSegments</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>segmentid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedSegment" id="9d3709c2-7789-414c-b9c6-3f5f6456fb02"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedSegment" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58aad2fdcae5f70004f44e55</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="13c6a124-4828-4d4b-b48b-8ddc53034234" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ad505322-75d1-4f8b-9929-2139c1c3bf7d" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#segmentname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedSegment" id="511f640e-4c9c-438e-be59-e0828c7d8947"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="DeleteSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedSegment" id="62a30b33-44b5-4421-bab2-8985983e297e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58ad37ef3915f100048b6bbb</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="590d87f4-55a5-48d6-ae8c-66490752b52e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="60e7acb0-a8ad-4c9a-bb79-a7e296c65883" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateSegmentNameLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="a86e37f5-606f-4d29-bb61-99974dafdd15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="f0eba70f-6b4b-4e7d-bed0-a61a69c6fd51"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 51 )
def segmentName = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="e56a8332-994b-4434-af9a-cfee32751560"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "org": "58b513e617b7207a6f546264"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="JsonPath Match" id="8f4b37ef-0706-4bc9-93f2-65e3f53d7b9f" name="ErrorMessageAssertion"><con:configuration><path>.errors.name.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="afc5736d-2844-4a90-99f6-d34c7007c136" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="356b13ca-0c23-42d4-b68e-53425f3cf2b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateSegmentDescriptionLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="ef53bc00-12f2-40fe-a4ba-3d68c7be5fa7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="5cad0a70-b060-4e39-b329-b9b004cbc7a5"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 100 )
def description = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="236460d2-fee2-4a59-8b7c-59cc6a8a32ea"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "description":"${#Project#description}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6555ddbc-3aab-4baa-86e4-c95c850c9831" name="Valid HTTP Status Codes"><con:configuration><codes>201

</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4f87ba42-2947-4886-81fc-104e41ed34d1" name="SegmentDescriptionAssertion"><con:configuration><path>description</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="33317030-2546-47e6-a007-4b0cb7d6419e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>segmentid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateSegments</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>segmentid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedSegment" id="00ee7232-0e4e-4fad-a204-dec08e73d72c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedSegment" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58aad2fdcae5f70004f44e55</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="13c6a124-4828-4d4b-b48b-8ddc53034234" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ad505322-75d1-4f8b-9929-2139c1c3bf7d" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#segmentname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedSegment" id="0ae96d29-bcc1-411a-83bb-ebfcb81c8428"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="DeleteSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedSegment" id="62a30b33-44b5-4421-bab2-8985983e297e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58ad37ef3915f100048b6bbb</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="590d87f4-55a5-48d6-ae8c-66490752b52e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="399ae95e-1518-4e48-b66e-ccd3a1166eb3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateSegmentDescriptionLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="61eb8f58-c1a3-43ff-90ba-eb267d7e5bfb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="9b6f4143-e337-4d8a-a14d-f45650bc1da1"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 101 )
def description = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="b9e4fcf7-a1d8-4519-a69a-d93ed375b2ee"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "description":"${#Project#description}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="JsonPath Match" id="8b0eaacc-5d01-4929-93a2-01d3d82e1d6d" name="ErrorMessageAssertion"><con:configuration><path>.errors.description.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6555ddbc-3aab-4baa-86e4-c95c850c9831" name="Valid HTTP Status Codes"><con:configuration><codes>422

</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4f6f2a56-65bc-407c-929b-a6f159d6cacb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateSegmentTypeLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="5e790cf9-c598-41d0-be2d-22af2510cf37"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="cc3f41b2-f88d-4f12-9578-4be6fc373969"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 50 )
def type = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "type", type )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="bb9814a5-cdf2-4913-86a4-04277896b727"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "type": "${#Project#type}",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0836540a-d05c-477b-975d-c1adb88926a1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="946aceac-6e45-4abb-9ac5-63016209c3de" name="SegmentTypeAssertion"><con:configuration><path>type</path><content>${#Project#type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="554ba7b5-e568-4601-a672-ef4e001c909d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>segmentid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateSegments</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>segmentid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedSegment" id="ff454268-3fd1-4262-a3a4-abfadfb542d9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedSegment" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58aad2fdcae5f70004f44e55</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="13c6a124-4828-4d4b-b48b-8ddc53034234" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ad505322-75d1-4f8b-9929-2139c1c3bf7d" name="JsonPath Match"><con:configuration><path>name</path><content>${#Project#segmentname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedSegment" id="952d0eb7-fc33-4f5e-ac11-eda85b321294"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="DeleteSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedSegment" id="62a30b33-44b5-4421-bab2-8985983e297e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58ad37ef3915f100048b6bbb</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="590d87f4-55a5-48d6-ae8c-66490752b52e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1b66366c-05f0-4b5a-8d37-6c4a46fb25e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateSegmentTypeLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="befeea10-2fba-49af-9d45-7a69ea2b3cb7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="312900e7-00df-4d79-ac1b-fbec4e23a46f"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 51 )
def type = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "type", type )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="63b44655-94b7-4ec8-b9fc-9cdb58210ae4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "type": "${#Project#type}",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="JsonPath Match" id="70ee5919-ff3c-4898-8ae5-92a76da01f5a" name="ErrorMessageValidation"><con:configuration><path>.errors.type.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0836540a-d05c-477b-975d-c1adb88926a1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8a1d300-564c-43ad-a6d5-1feb93301c00" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateSegments-EffectiveToDateLessthanEffectiveFromDate" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="2d45ab48-eb87-4a2f-959c-c4e8e8239f42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="a1a96eec-3f07-4d3b-8e13-c7103d599cd8"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def type = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "type", type )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateSegments" id="7e6709d5-b793-418c-9e7c-1682580357bb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments" methodName="CreateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateSegments" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "type": "${#Project#type}",
    "effectiveDate": "2017-02-16T20:44:54.933Z",
    "expirationDate": "2017-02-04T19:00:45.402Z",
    "org": "587da3c9613e4c5cfefd109b"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments</con:originalUri><con:assertion type="JsonPath Match" id="70ee5919-ff3c-4898-8ae5-92a76da01f5a" name="ErrorMessageValidation"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4b1db11b-ae3e-4186-979d-0074fe7b51f0" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="b372afb5-94d4-41ac-85a0-b7fb752dab50" name="ReferenceData-UpdateSegmentDetails"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5472881d-6b41-4ab4-abdb-9f60b7a18ba5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateSegmentName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateSegments" id="473ca804-21dd-410d-9838-11ba9d78452a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateSegments"].testCases["CreateSegments-RequiredColumns"]

def runner = tc.run( null, false )
</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="7488a9de-e782-4cf0-8e4d-599b0057a4be"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def segmentName = randomValue
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def description = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def type = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
//testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
//testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSegmentName" id="cc58f02e-9852-489c-973a-d25ba2ea53f5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="UpdateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSegmentName" id="0e48db71-8b4d-4ebf-895d-19b7d3fb44e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "effectiveDate": "2017-02-21T20:44:54.933Z",
    "expirationDate": "2018-03-21T19:00:45.402Z",
    "org": "58b513e617b7207a6f546264"
    
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e4d6ed5b-049b-46cf-8862-49adb20da585" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedSegmentName" id="02e2088f-7219-436e-bd15-9b9c1fc1a9e0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedSegmentName" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58abc85bcae5f70004f45d7d</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="54c31dca-5cb8-4957-b742-c63374015239" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a7b9c23-1301-4262-aa77-381d7ea8bf63" name="SegmentNameAssertion"><con:configuration><path>name</path><content>${#Project#segmentname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4171e29b-774e-4e15-b7c5-49dded4a5682" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateSegmentDescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateSegments" id="31e9b533-37f3-432a-90a7-badbd036c700"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateSegments"].testCases["CreateSegments-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="82c3db8d-0405-4e2c-aa40-3a679fda7b63"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def segmentName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def type = randomValue

//testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
//testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSegmentDescription" id="9fc1fad3-0fa7-4370-b9af-66d29d70e811"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="UpdateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSegmentDescription" id="0e48db71-8b4d-4ebf-895d-19b7d3fb44e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "description":"${#Project#description}",
    "effectiveDate": "2017-02-08T20:44:54.933Z",
    "expirationDate": "2018-03-04T19:00:45.402Z",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e4d6ed5b-049b-46cf-8862-49adb20da585" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedSegmentDescription" id="75f44989-a100-4612-ab08-388d7a3099d1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedSegmentDescription" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58abc85bcae5f70004f45d7d</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="54c31dca-5cb8-4957-b742-c63374015239" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a7b9c23-1301-4262-aa77-381d7ea8bf63" name="SegmentDescriptionAssertion"><con:configuration><path>description</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ccc2b1e2-0922-4b76-9c9f-dcfc1bdad987" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateSegmentType" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateSegments" id="76d3dabe-c1d9-432f-a3cf-c95e9b8ddb3f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateSegments"].testCases["CreateSegments-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="d8719aef-4c31-4696-8a80-23b1769f9029"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def segmentName = randomValue
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def type = randomValue

//testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
//testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSegmentType" id="236a9338-ba91-4d25-bef6-f7024bc78fcf"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="UpdateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSegmentType" id="0e48db71-8b4d-4ebf-895d-19b7d3fb44e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "type":"${#Project#type}",
    "effectiveDate": "2017-02-08T20:44:54.933Z",
    "expirationDate": "2018-03-04T19:00:45.402Z",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e4d6ed5b-049b-46cf-8862-49adb20da585" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedSegmentType" id="eebd9483-0858-4408-b91c-5551ebbcd8ed"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedSegmentType" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58abc85bcae5f70004f45d7d</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="54c31dca-5cb8-4957-b742-c63374015239" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a7b9c23-1301-4262-aa77-381d7ea8bf63" name="SegmentTypeAssertion"><con:configuration><path>type</path><content>${#Project#type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9eed702d-3534-4bf8-bd42-d7ecfcd34bca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateSegmentEffectiveDate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateSegments" id="38167d40-5b43-4ee5-adfd-c8671ad17e62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateSegments"].testCases["CreateSegments-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="53504167-5c39-45ef-931f-44c2ec3a7712"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def segmentName = randomValue
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def description = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def type = randomValue

//testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
//testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
//testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSegmentEffectiveDate" id="fa9d03be-1dfb-4467-8ef3-0d711efcaa39"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="UpdateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSegmentEffectiveDate" id="0e48db71-8b4d-4ebf-895d-19b7d3fb44e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "type":"${#Project#type}",
    "effectiveDate": "2017-02-21T20:44:54.933Z",
    "expirationDate": "2018-03-04T19:00:45.402Z",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e4d6ed5b-049b-46cf-8862-49adb20da585" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedSegmentEffectiveDate" id="f18d7400-c829-492c-a540-7c9e2ff669bb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedSegmentEffectiveDate" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58abc85bcae5f70004f45d7d</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="54c31dca-5cb8-4957-b742-c63374015239" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a7b9c23-1301-4262-aa77-381d7ea8bf63" name="SegmentEffectiveDateAssertion"><con:configuration><path>effectiveDate</path><content>2017-02-21T20:44:54.933Z</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="72e087f9-8a96-40e3-89a2-1fb9730cca5a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateSegmentExpirationDate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateSegments" id="f4a607cd-bf5d-4bae-808d-740dbc3c4090"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateSegments"].testCases["CreateSegments-RequiredColumns"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="36f17e53-19a4-4267-9b34-c166464d34b7"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def segmentName = randomValue
//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def description = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def type = randomValue

//testRunner.testCase.testSuite.project.setPropertyValue( "segmentName", segmentName )
//testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
//testRunner.testCase.testSuite.project.setPropertyValue( "type", type )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSegmentExpirationDate" id="f8dec361-527a-49aa-bccd-faee5b6ab8da"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="UpdateSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSegmentExpirationDate" id="0e48db71-8b4d-4ebf-895d-19b7d3fb44e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#segmentName}",
    "type":"${#Project#type}",
    "effectiveDate": "2017-02-08T20:44:54.933Z",
    "expirationDate": "2019-03-04T19:00:45.402Z",
    "org": "58b513e617b7207a6f546264"
 
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e4d6ed5b-049b-46cf-8862-49adb20da585" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedSegmentExpirationDate" id="0de51be7-7e27-459d-989e-99bdde8f548a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/segments/${#Project#segmentid}" methodName="GetSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedSegmentExpirationDate" id="8d198c10-9b19-41d4-b212-c5d8111370ce" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/segments/58abc85bcae5f70004f45d7d</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="54c31dca-5cb8-4957-b742-c63374015239" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a7b9c23-1301-4262-aa77-381d7ea8bf63" name="SegmentExpirationDateAssertion"><con:configuration><path>expirationDate</path><content>2019-03-04T19:00:45.402Z</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="7659aabc-a421-43ec-9b20-20ae6c090d74" name="ReferenceData-CreateLocations"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="fad820f5-15a3-4577-97cb-89ac22e9b95f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateLocation-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="c6f71780-85c8-4a67-b9c4-6f59336cc95d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="c8f2b164-7299-4873-b53e-8ac58f3afa70"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="2cb69235-b35e-4fb6-bbe2-26cfc7283415"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="caced0dc-0270-4703-99fa-5c71baa83941" name="LocationNameAssertion"><con:configuration><path>name</path><content>${#Project#locationName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationCityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationstateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationcountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationZipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7dcfecf9-fce2-4f5e-adf7-9d95d45a47fa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="465cb2d1-a81a-4d59-824e-9746b5a5414a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="947e6c9b-958a-4181-a05b-09243d02e752" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="85636230-6050-40f5-abd9-3aa99cf3fcff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateLocation-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="8c79502f-988f-4e57-9ab1-7ce11421b09c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="529daa1d-461c-4d56-b66e-74ed7a00e1cb"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def description = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def cityName = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def stateName = randomValue

//randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
//def countryName = randomValue

//randomValue = generator( (('0'..'9')).join(), 5 )
//def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
//testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
//testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
//testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
//testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
//testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="f7531535-75c2-4826-a94a-099901fe595a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "number":"${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="caced0dc-0270-4703-99fa-5c71baa83941" name="LocationNameAssertion"><con:configuration><path>name</path><content>${#Project#locationName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="3b0be616-04af-4c4b-9868-47626f84189e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="c331fc76-46b5-405b-9d6a-92a45d6df382"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="088d6c34-69bb-479d-9f9b-d5794c5f6393" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateLocation-WithoutRequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="93062eec-d7df-412a-a31c-c8220176cdad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="2f6755cf-9527-49b4-855c-062fdbe5bfd6"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "",
    "number":"",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f9b2f4b4-f1c5-4e7d-afa4-31aa00720c44" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="60fcf730-6799-4815-88a9-d58f4ddd7f24" name="ErrorMessageValidation"><con:configuration><path>.errors.name.message</path><content>[Path `name` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4429a448-306f-4edc-a3d4-dd4ab19d1e98" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateLocation-WithDuplicateValues" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="5d1578b2-f459-4732-87fc-c30f23b32b91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="f8ed7e78-4968-4743-847d-d592765258a5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
   "name": "YZTky",
   "desc": "vkqTF",
   "city": "ktlSA",
   "state": "TXkfk",
   "country": "RimNo",
   "zipCode": "84737",
   "timeZone": "UTC",
   "number": "81868",
   "org": "58b513e617b7207a6f546264"
   
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="JsonPath Match" id="89ce059e-fae1-4e39-9fe6-812c9c1db7e2" name="JsonPath Match"><con:configuration><path>status</path><content>422</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="185aba64-00ac-4a3f-a880-67be888a472e" name="JsonPath Match message"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0125d189-3e34-48dd-9cda-1254d4ebb125" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationNameLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="e7a9f239-a657-448b-abf4-28fa0b4eafb7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="972be176-45b9-4196-b9cc-96e295a3c248"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 50 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="19b203ae-d4a9-4c37-8e1c-09d8b07928f1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4e3981ac-b9d2-4dc7-99a0-14df996c1557" name="LocationNameAssertion"><con:configuration><path>name</path><content>${#Project#locationName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="1ea30347-46e2-4878-85aa-c58649f805ba"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="5708337d-9b15-4cee-ade2-8b21763e94f1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration><path>name</path><content>${#Project#locationName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="de4fe1d1-7c16-42ec-98af-78d1ab9630c3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0699c20c-15bb-4de4-b121-2acca68f55a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationNameLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="52de0488-ccda-41d7-9070-fc5a31f099c3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="1818450b-4ee2-4b06-ad8f-f3cc65d7a174"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 51 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="e3209193-7304-4f3c-96f8-2e3447681824"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f83a80b1-ec52-4b46-bfdd-f5a4bb74cc8f" name="LocationNameLengthAssertion"><con:configuration><token>the maximum allowed length (50)</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="da35b7f5-5a98-4469-af0c-b8217eb248b4" name="ErrorMessageAssertion"><con:configuration><path>.errors.name.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9ad53408-e5ff-4d2b-aa87-b4f9f1cb148d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationDescriptionLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="893c4283-92d5-4f1b-b692-c4feacd3cfee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="b27e7c89-8b24-4665-8e41-55ed1a04ad44"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 250 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="2b54cbe7-d633-4d33-8a4e-6fbf2e1b1aee"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7170f96f-c242-4621-9378-cfa52330d142"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="39fbdaed-b889-4005-928c-209a8e11cafb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="d36c1e8a-5617-410f-bdd0-fe685137b6c0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="536239e4-7ccf-4ac7-8d11-038d120fe3a8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationDescriptionLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="1ff470a9-5444-46a1-9208-33eb38c91fb8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="cd5c460a-cf44-416a-8924-811dbd82eb1b"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 251 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="d356bb67-a013-4769-8886-0e9a56db2bee"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cbb8b2ee-d7cf-4efd-89ba-e3de3c361233" name="LocationDescriptionLengthAssertion"><con:configuration><token>the maximum allowed length (250)</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="285a566f-55f6-4c4f-82d8-b0eb717710a4" name="ErrorMessageAssertion"><con:configuration><path>.errors.desc.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5e70f5c1-198c-403d-99e4-b6a9f8b9b93a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationCityLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="04c3dd16-ce89-48a1-8b70-29ea8ab9b4f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="311abc06-d587-413f-9649-bd8763055767"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 50 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="0df713c2-02f6-4db6-93e8-ee65e804b897"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationCityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="02d0e830-d85a-41ee-9cbc-54eb91cde7a3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="b12f79f2-7a9b-4446-ad3a-5ea86d101d35"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="426bad31-2794-4223-beae-985592224302"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6aa3470d-ac96-4ef9-9f41-21b46fc3b920" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationCityLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="abc10f26-7a75-4859-b20c-e231b667e1b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="711dda66-2e5c-4984-baf6-80506b0cf4e0"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 51 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="456d4ee8-202b-4c38-a922-b860d24cd959"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="73547b3b-8e3e-4034-9352-4e9aa4d7ad06" name="ErrorMessageAssertion"><con:configuration><path>.errors.city.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="768ce517-05fc-4834-b623-63a700325440" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationStateLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="94f6f459-6177-4f53-be0f-5d2a1e82e66b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="c0f3bb3f-f56f-44e2-83f8-cf8dfddfd0e1"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 50 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="0ef19066-735b-4b35-8d4a-9b27c78b3b2f"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationStateAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="39106089-6792-4e48-905e-738519483280"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="cd129c40-01e2-4fb1-8098-4d4f93bac9f0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="b54a755e-7ff4-43a8-a9d8-6035fffc2cea"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="86d0c7fe-7583-4492-8561-322ffaa8169c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationStateLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="90dfaef5-d1e1-432b-a568-89673740e055"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="7f08cc3c-42ab-4440-9487-883c3d34ebc1"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 51 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="ecab1700-f030-44c7-9d5c-670ee8a67622"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79a75d29-9945-4446-b87f-f7fcefb4aa62" name="LocationStateLengthAssertion"><con:configuration><path>.errors.state.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="54d6912b-5751-4e20-8a02-be10aadc0632" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationcountryLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="42129d37-4058-4a62-bb0b-e848e34ba9b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="0cf3c943-616a-41df-91f1-770d853da63b"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 50 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="257ce680-0b8b-435a-b556-df32f761e6bd"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationcountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a7e742d4-bf74-460b-8a83-30750e158693"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="7f5effa3-0ad2-4098-8346-7c60cae687a3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="c7d6bd2b-bf46-4fe3-b2aa-c2f2bda81d36"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="74aca8bf-9090-4ca6-a219-cbadfeeabcc8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationcountryLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="7c372871-cdd8-4948-858a-0163f17cbef8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="256bf703-0861-46fc-8d5d-057a0a261466"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 51 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="9511aacf-2499-4a1f-9be9-26be97df0343"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2a0df16b-fe21-43b8-bdce-403c47621d60" name="JsonPath Match"><con:configuration><path>.errors.country.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e20913ec-42f6-4597-9627-ff6aa7d717a9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationZipCodeLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="1da8ca0a-4932-42c4-9fe4-d466f9f1780c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="139c59ab-ff03-4366-ad4c-d7279fb413bb"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('5'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="13fb6fdb-21f8-4cbf-ac56-af7b7c2ddda0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="efc989ea-a014-460e-99bf-a9b61f1d0cde" name="LocationZipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="38bf4856-cbb9-44e3-85bd-ab042cba3038"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="34733de7-92d1-4af1-95e9-2b3dec8ced09"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="670c2ade-cff2-42cb-a475-2fbafd3e4934"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4d59e10d-86ed-4ecc-ae82-73e48e65e44a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationZipCodeLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="378449f6-265b-4e01-b707-e05a90cacb7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="68e8291f-ee25-40ad-93ab-cbfb93d54f7a"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 51 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="771374bc-3c21-43c8-a92d-fbbf41092244"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="98b19ac6-6c8b-4feb-84ae-26d9260010b6" name="LocationZipCodeAssertion"><con:configuration><path>.errors.zipCode.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="709fe58e-6c64-4cf9-8707-c833ff01ed2e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationZipCodeLength-Invalid-2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="06f9261b-ba9f-446b-a9ba-911d6ae639eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="d841f188-3caa-4091-ad95-cbbe119c68ba"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('A'..'Z')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="15b67a44-77d1-43eb-8ca7-87412f12db5d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="98b19ac6-6c8b-4feb-84ae-26d9260010b6" name="LocationZipCodeAssertion"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b9496346-7d5e-47f7-b6dd-9584636c6bca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationNumberLength-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="cc463322-cfe3-4228-921f-60fab5ba24d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="c1af3fba-cfb8-429b-9088-1fb4ed3fed88"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 30 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="e7be5d22-c9cd-49f8-95b3-86f1c350beb1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b34ac5c5-c4b7-4590-8a3d-f74f15e0b0d7" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="35bd6311-d2c2-4612-98f3-2c83655b0543"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>locationid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateLocations</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>locationid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedLocation" id="fc1d79ab-d0dd-41d2-bac6-95070fe3d67e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a6bc7926-23bd-4e68-b85e-19e684917cd1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9428d38b-47b3-4fd7-8eff-f23ece2ab714" name="LocationNameAssertion"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationcityAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationCountryAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationzipCodeAssertion"><con:configuration><path>zipCode</path><content>${#Project#zipCode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e418c7b-2850-427a-89ad-ac4456bff2f6" name="LocationNumberAssertion"><con:configuration><path>number</path><content>${#Project#number}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedLocation" id="a924f000-d557-4076-8489-7dfb60638263"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ac1fc33915f100048b6a80</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="22422a15-6fff-4a40-bee6-85d72e054113" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dc87739b-3a4b-4fbe-913e-dbcecbd463b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLocationNumberLength-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="8c0c8ede-a2ba-4827-a11c-10848174ab15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="92c83973-51f3-4c50-a4ad-3ff5de4b6615"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 31 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateLocations" id="c6bb1b23-d362-4628-b94f-e529b85800fa"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations" methodName="CreateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateLocations" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f13099db-d54d-4a32-b077-2b2a8b780ae1" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="38244a1d-4be0-4e0a-a224-1fab64996ed0" name="JsonPath Match"><con:configuration><path>.errors.number.kind</path><content>[maxlength]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="a138183b-7219-4b2a-8710-f8bf0325ee25" name="ReferenceData-UpdateLocationDetails"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="32a9da6c-8c6d-4fc3-abe6-b5607e5166ae" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="8c17ed98-1c05-4364-9ae5-81f29edb47fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="b8f83741-c500-4494-b2c7-5298a09d6156"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
/*randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue*/

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
/*testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )*/</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationName" id="15f41d11-48c5-4e8e-9676-ea11cdbb8e2c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationName" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "org": "${#Project#orgId}"
   
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationNameAssertion"><con:configuration><path>name</path><content>${#Project#locationName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="8dbe47cb-6096-4ee1-9aaa-3a0a54f45ce9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationName</con:sourceStep><con:sourcePath>name</con:sourcePath><con:targetType>locationName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationName" id="2b4b068e-a326-4579-97f7-547116d5a5be"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationName" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="3179f955-2ba9-44df-b004-6547e21bc4cd"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0e5e27d9-9136-4f92-91df-8d1a48c1bb61" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationDescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="c6338371-b8a6-4430-90bd-b6320116ac1f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="236d7af7-0894-4718-aebb-f9cc56f480d1"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

/*randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue*/

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
/*testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )*/</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationDescription" id="0f5fffd3-8123-4425-be42-0492ac40a9f4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationDescription" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationDescriptionAssertion"><con:configuration><path>desc</path><content>${#Project#description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ab33c43a-109d-4526-b409-d197a2f735b1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>description</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationDescription</con:sourceStep><con:sourcePath>desc</con:sourcePath><con:targetType>description</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationDescription" id="3bcba6ff-8f6f-45e5-8d7d-545539ac131d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationDescription" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="3610146b-47ca-4bfb-aa9e-856a313de673"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e19380dc-09d9-49ba-a3cd-7f7e52901b1a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationCity" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="d9e59fc6-f336-40d9-9d6f-49e64c5c3f3b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="f2f29e32-8050-4016-b2b5-06d2953abe29"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

/*randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue*/

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
/*testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )*/</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationCity" id="922bf6f2-dace-4c78-89d4-8e9f7ff4562d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationCity" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationTypeAssertion"><con:configuration><path>city</path><content>${#Project#cityName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f07de890-eca8-49c9-adcb-d5097b09d297"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationCity</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationCity</con:sourceStep><con:sourcePath>city</con:sourcePath><con:targetType>cityName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationCity" id="699455f4-146a-479c-b9c2-e0e00d97448a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationCity" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="eb88653d-997f-42f7-963a-bfc068efa6af"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b0cc2050-dc1d-4afb-a341-c55bb24c4fe8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationState" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="f86f8cab-cc17-4a04-9eb7-3f2e9a062b63"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="e87b3535-530e-4818-8940-6a38ce45b584"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

/*randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue*/

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
/*testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )*/</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationState" id="a438ceec-d95b-4f80-9940-65d5a75913d0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationState" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationStateAssertion"><con:configuration><path>state</path><content>${#Project#stateName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="17d37188-3cd0-4e1f-bc8c-4d85fb58fecc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationState</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationState</con:sourceStep><con:sourcePath>state</con:sourcePath><con:targetType>stateName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationState" id="a8451e6d-1250-4522-b4d7-da101d94232a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationState" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="cf848df2-9f0b-4031-9940-009ebbdefe79"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="18692c63-241c-4ef0-a9fd-d73dd559d22f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationCountry" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="a912c168-8994-43da-9e32-0fd4299145b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="51b8cbae-82f5-4900-873b-a5a6cee75c54"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

/*randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue*/

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
/*testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )*/</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationCountry" id="f52b3d37-8f9a-4513-8beb-4e655d444f3b"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationCountry" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationCountryNameAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="64e9557e-5382-4ce3-9928-1163160d309d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationCountry</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationCountry</con:sourceStep><con:sourcePath>country</con:sourcePath><con:targetType>countryName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationCountry" id="cca9aebf-9d6b-4690-bfcb-7dcac44cd401"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationCountry" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="fbdbd5c0-0ff0-41b3-a004-5535d3ed1bdb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="25aa0651-9385-41e5-bd39-514ddd6c25e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationZipcode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="05230c85-4630-4dad-a0c9-84fb96f082b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="1c9e9cbe-8bc2-41c6-82c3-f0627f3ddbd0"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

/*randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue*/

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
/*testRunner.testCase.testSuite.project.setPropertyValue( "number", number )*/</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationZipcode" id="0addd657-e10e-4b8d-86ed-a7e37875f7af"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationZipcode" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationCountryNameAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="49a14072-a350-46b8-986b-ea04badc4878"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationCountry</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationZipcode</con:sourceStep><con:sourcePath>country</con:sourcePath><con:targetType>countryName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationZipcode" id="c8742abf-a377-4d08-a6f7-e4d54a45af18"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationZipcode" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="4aff3b90-a7ac-47f4-b68e-0d42aeb856a9"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d264d8ba-8880-4a55-bd19-8a5f5f669b83" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationNumber" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="f379b1e5-354f-4ca9-9b62-54b045cb0be9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="86d207fe-cb38-4ff8-9147-c7b00406437b"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationNumber" id="fbfd1e8d-8bb9-4436-9fd9-5fe08aca80e7"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationNumber" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationCountryNameAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="313a6f03-dee1-43d5-a830-a80ddaa88c95"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationCountry</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationNumber</con:sourceStep><con:sourcePath>country</con:sourcePath><con:targetType>countryName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationNumber" id="0dba4df3-c0f1-4ed7-9c56-de56e4a20b8e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationNumber" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="1602569c-335f-4e33-9c6c-e893d14401fa"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c1ace8d1-6de3-43fe-a015-0034c03bc53f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateLocationTimeZone" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateLocation" id="fb9b5bdd-8ba9-47e0-88e4-a9d304cdba36"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ReferenceData-CreateLocations"].testCases["CreateLocation-RequiredColumns"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="47d21d7c-3993-4604-90f2-80b9c5acce93"><con:settings/><con:config><script>
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def locationName = randomValue
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def description = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def cityName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def stateName = randomValue

randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def countryName = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def zipCode = randomValue

randomValue = generator( (('0'..'9')).join(), 5 )
def number = randomValue

//randomValue = generator( (('A'..'Z')).join(), 5 )
//def timeZone = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "locationName", locationName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cityName", cityName )
testRunner.testCase.testSuite.project.setPropertyValue( "stateName", stateName )
testRunner.testCase.testSuite.project.setPropertyValue( "countryName", countryName )
testRunner.testCase.testSuite.project.setPropertyValue( "zipCode", zipCode )
testRunner.testCase.testSuite.project.setPropertyValue( "number", number )
//testRunner.testCase.testSuite.project.setPropertyValue( "timeZone", timeZone )
//log.info(timeZone)</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateLocationTimeZone" id="b7c73447-b2fe-45fc-b711-209ce4ba6147"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="UpdateLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateLocationTimeZone" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#locationName}",
    "desc": "${#Project#description}",
    "city": "${#Project#cityName}",
    "state": "${#Project#stateName}",
    "country": "${#Project#countryName}",
    "zipCode": "${#Project#zipCode}",
    "timeZone": "UTC",
    "number": "${#Project#number}",
    "org": "${#Project#orgId}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad58a0b20a3500043eb194</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d698d323-0869-4e6b-b747-fd7005299ff0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30f32d17-7d68-47cc-b1cf-193cc8dd0507" name="LocationCountryNameAssertion"><con:configuration><path>country</path><content>${#Project#countryName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e8299738-e9a3-4750-853a-a52d994deeaf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LocationCountry</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateLocationTimeZone</con:sourceStep><con:sourcePath>country</con:sourcePath><con:targetType>countryName</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedLocationTimeZone" id="bc0f90f0-4e5c-44da-9d4e-8354bafe8404"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="GetLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedLocationTimeZone" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad5fefb20a3500043eb1a8</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="566e9184-750f-44de-b515-c44738d7033f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteLocation" id="d42675fa-0e1d-4fbc-8306-818c3bdde409" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/locations/${#Project#locationid}" methodName="DeleteLocation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteLocation" id="a2a36535-a06e-42bc-a24b-6c1bc0563675" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/locations/58ad6039b20a3500043eb1a9</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ea590de4-73ec-42d0-bd13-c626dc44d7d3" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="3bc84f84-790c-4c89-a63b-bf7d1e362f82" name="ReferenceData-CreateProducts"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6359ef18-ea6b-49d2-9f7f-f0feb8428a9f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProducts-AllColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="9f0bf3ac-c9ea-4db2-859a-0ef4314c44df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="6f19f149-503f-4ac4-9867-c83c9d1768ef"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def productName = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def description = randomValue
randomValue = generator( (('0'..'9')).join(), 3 )
def cost = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def category = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def subcategory = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def style = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def sku = randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "productName", productName )
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cost", cost )
testRunner.testCase.testSuite.project.setPropertyValue( "category", category )
testRunner.testCase.testSuite.project.setPropertyValue( "subcategory", subcategory )
testRunner.testCase.testSuite.project.setPropertyValue( "style", style )
testRunner.testCase.testSuite.project.setPropertyValue( "sku", sku )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProducts" id="e606a3af-4bf5-4560-868d-b3970aed4b2a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products" methodName="CreateProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#productName}",
    "desc": "${#Project#description}",
    "cost": "${#Project#cost}",
    "category": "${#Project#category}",
    "subcategory": "${#Project#subcategory}",
    "style": "${#Project#style}",
    "sku": "${#Project#sku}",
    "org": "${#Project#ordId}"
   
  }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7f6750e5-9bff-4345-a3a2-980df8e8b77e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Productid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProducts</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>productid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedProduct" id="dfa6946b-32ec-4a73-ae6c-213a344c63c8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products/${#Project#productid}" methodName="GetProductbyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedProduct" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products/58ad858fb20a3500043eb869</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="bae051f0-6482-4bbf-be20-35601a3ebc3f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedProduct" id="92c4f641-5a8b-46d6-b9fe-600c97d2d977"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products/${#Project#productid}" methodName="DeleteProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedProduct" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products/58ad858fb20a3500043eb869</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ba150ef4-406e-46da-a5c6-e01cdc40ae5e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="352a54e4-e801-49da-af0e-8423a8d6c226" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProducts-RequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="d2a6f202-7197-4f66-871f-b9788568cd58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="e9db44f9-5b37-4390-8c1a-464aba9cc2e3"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def productName = randomValue
/*randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def description = randomValue
randomValue = generator( (('0'..'9')).join(), 3 )
def cost = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def category = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def subcategory = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def style = randomValue*/
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def sku = randomValue


testRunner.testCase.testSuite.project.setPropertyValue( "productName", productName )
/*testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cost", cost )
testRunner.testCase.testSuite.project.setPropertyValue( "category", category )
testRunner.testCase.testSuite.project.setPropertyValue( "subcategory", subcategory )
testRunner.testCase.testSuite.project.setPropertyValue( "style", style )*/
testRunner.testCase.testSuite.project.setPropertyValue( "sku", sku )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProducts" id="f80c4b61-f60e-4a7a-b5bc-9b6290c0da31"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products" methodName="CreateProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "${#Project#productName}",
    "desc": "${#Project#description}",
    "cost": "${#Project#cost}",
    "category": "${#Project#category}",
    "subcategory": "${#Project#subcategory}",
    "style": "${#Project#style}",
    "sku": "${#Project#sku}",
    "org": "${#Project#ordId}"
   
  }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="047ec9c1-197e-44ca-a716-6cc990ae29b1" name="Invalid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="9cd06c21-e2ae-4abe-80cc-0ed450743876"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Productid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProducts</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>productid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedProduct" id="ddc0b270-4032-498c-80e1-6523ec7ac3d3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products/${#Project#productid}" methodName="GetProductbyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedProduct" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products/58ad858fb20a3500043eb869</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="bae051f0-6482-4bbf-be20-35601a3ebc3f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedProduct" id="bce544e0-1bc5-4681-9710-34f69791e37d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products/${#Project#productid}" methodName="DeleteProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedProduct" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products/58ad858fb20a3500043eb869</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ba150ef4-406e-46da-a5c6-e01cdc40ae5e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c639150-8cc3-45c5-a2b5-f17512b1ca78" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateProducts-WithoutRequiredColumns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="033c9658-d230-4b6d-b0f7-5c5d24eed85b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="1345b5f6-c210-47a4-9410-b888b722a342"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
/*randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def productName = randomValue*/
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def description = randomValue
randomValue = generator( (('0'..'9')).join(), 3 )
def cost = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def category = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def subcategory = randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def style = randomValue
/*randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def sku = randomValue*/


/*testRunner.testCase.testSuite.project.setPropertyValue( "productName", productName )*/
testRunner.testCase.testSuite.project.setPropertyValue( "description", description )
testRunner.testCase.testSuite.project.setPropertyValue( "cost", cost )
testRunner.testCase.testSuite.project.setPropertyValue( "category", category )
testRunner.testCase.testSuite.project.setPropertyValue( "subcategory", subcategory )
testRunner.testCase.testSuite.project.setPropertyValue( "style", style )
/*testRunner.testCase.testSuite.project.setPropertyValue( "sku", sku )*/

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateProducts" id="ffc01476-8037-49b7-b7b2-2dd1e1686c4d"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products" methodName="CreateProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateProducts" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "name": "",
    "desc": "${#Project#description}",
    "cost": "${#Project#cost}",
    "category": "${#Project#category}",
    "subcategory": "${#Project#subcategory}",
    "style": "${#Project#style}",
    "sku": "",
    "org": "${#Project#ordId}"
   
  }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e17727c2-1961-462f-a6ec-5c99ce17f134" name="Invalid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3a97fbfb-b929-4fe5-b14c-9d26f49d63e1" name="ProductNameAssertion"><con:configuration><path>.errors.name.message</path><content>[Path `name` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3a97fbfb-b929-4fe5-b14c-9d26f49d63e1" name="ProductSKUAssertion"><con:configuration><path>.errors.sku.message</path><content>[Path `sku` is required.]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ff9ba1da-d9f7-45e1-8239-79dedf19a9d5" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Productid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateProducts</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>productid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedProduct" id="71535a40-8a7a-412f-8dbb-33e43dd63e96" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products/${#Project#productid}" methodName="GetProductbyID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedProduct" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products/58ad858fb20a3500043eb869</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="bae051f0-6482-4bbf-be20-35601a3ebc3f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteCreatedProduct" id="b60040bf-a33a-431c-a48e-b4ee864ea09a" disabled="true"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/products/${#Project#productid}" methodName="DeleteProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteCreatedProduct" id="378ca48e-55d2-4400-82d1-912804a665eb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/products/58ad858fb20a3500043eb869</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ba150ef4-406e-46da-a5c6-e01cdc40ae5e" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1e6ba531-7506-47c0-92f5-07365268f477" name="Settings-Users-CreateUser"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="967dffcd-dbed-41a3-b37d-59723c5a8329" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateUser" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="854cb634-2fbf-477f-83a2-0ed8117a97d2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="ffa26381-bbc2-4c91-b041-7e53a781bb62"><con:settings/><con:config><script>def lg = 'lg'
def em = 'em'
def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def login = lg+randomValue
testRunner.testCase.testSuite.project.setPropertyValue( "login", login )
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def emailID = em+randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "emailID", emailID +"@gmail.com" )
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateUser" id="ef325bd4-96f5-452f-8211-c156c26f9342"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users" methodName="CreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateUser" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#project#orgId}",
  "login": "${#Project#login}",
  "email": "${#Project#emailID}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users</con:originalUri><con:assertion type="JsonPath Match" id="3b948167-f358-4d29-8eea-f576aa1a2f20" name="LoginNameAssertion"><con:configuration><path>login</path><content>${#Project#login}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e0d5115b-ccea-4355-a8c8-5ec150217a87" name="EmailIDAssertion"><con:configuration><path>email</path><content>${#Project#emailID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="71133696-a869-4d83-a9e8-01a508c6e203" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferProperty" id="b388e9e2-1583-4953-b8d4-0b01b92e7295"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateUser</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>userid</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>login</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateUser</con:sourceStep><con:sourcePath>login</con:sourcePath><con:targetType>login</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>blocked</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateUser</con:sourceStep><con:sourcePath>blocked</con:sourcePath><con:targetType>blocked</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionManagement</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateUser</con:sourceStep><con:sourcePath>sessMgmtFlag</con:sourcePath><con:targetType>sessionMgmtFlag</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>multipleSessions</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateUser</con:sourceStep><con:sourcePath>sessMultiFlag</con:sourcePath><con:targetType>sessionMultiFlag</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetCreatedUserByID" id="896758cb-fc1e-4a73-97bd-cb8ed28a97c7"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="GetUserByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCreatedUserByID" id="4fecdd76-3279-4666-a9b6-65624dae03b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58aa836ec6918e0004306d56</con:originalUri><con:assertion type="JsonPath Match" id="e36ae403-7456-4bec-9cc8-cdefd1b8236f" name="LoginNameAssertion"><con:configuration><path>login</path><content>${#Project#login}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d07a9bc8-0b94-4895-9ce9-e7f226751ccd" name="EmailAssertion"><con:configuration><path>email</path><content>${#Project#emailID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="22412e30-9cc8-475d-b697-3e224cd81d2f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="28b25267-c625-47bc-8a3e-56b9cef81f88" name="Settings-Users-UpdateUserDetails"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6807091e-85a3-470d-9c93-89ccc9efacd8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateUserEmailID-Valid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="4719a84b-aa75-44d0-8dfc-43840891c6b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="RegenerateRandomProperties" id="9baca310-16cf-447f-a774-7427bd7dcf88"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def emailID = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "emailID", emailID +"@gmail.com" )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateUserEmailID" id="ce3f4c64-d26c-4171-ba63-db22381eeb87"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateUserEmailID" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "email": "${#Project#emailID}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="96d6703f-9a24-4dbc-8173-995a44d59b59" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e89d15e3-3483-4b54-8acb-7c877cd935f9" name="UpdatedEmailAssertion"><con:configuration><path>email</path><content>${#Project#emailID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedUserEmailID" id="8686d8e1-bcd4-43c2-8b71-6620416f4fd8"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedUserEmailID" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
  "org": "${#Project#orgId}"
  
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58aa836ec6918e0004306d56</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="69a9f595-68ff-41c8-9295-589dada9b0b4" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="792e767e-af20-452c-a4d4-718de043fcc1" name="UpdatedEmailAssertion"><con:configuration><path>email</path><content>${#Project#emailID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteUserID" id="a02fe857-e56f-41bf-9df1-c05aa3c5b0bb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteUserID" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58a43c7c918e420004a4d124</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b75fc01-3058-4ec3-bf8b-323e9e1381d8" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1f790b1a-42e2-4b12-a33e-c59c38f82a2a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateUserEmailID-Invalid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="4d140e3a-22cd-44a1-9cf7-88561e2cfdb5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="generateRandomProperties" id="cad3d525-6106-4123-8c2c-12400eb12143"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def emailID = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "emailID", emailID+"*gmail.com" )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateUserEmailID" id="140cf7c2-a68b-4ea1-bf5f-52b33af5fcbb"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateUserEmailID" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "login": "${#Project#login}",
    "email": "${#Project#emailID}"

}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="JsonPath Match" id="f012dbbd-96da-4743-979d-a7895293e2f2" name="JsonPath Match"><con:configuration><path>message</path><content>Validation Error</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="867660f2-b34e-4698-ada2-5ff77d9f9673" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateLoginNameNotEditable" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="d4363a69-143a-4f1a-a003-3da86f867d90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="ReGenerateRandomProperties" id="3e1b459c-b8a4-4fd2-828d-cf7238068d48"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('a'..'z')).join(), 5 )
def login = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "login", login )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateUserlogin" id="53692f60-57f1-4cbb-a25d-b3da0a366364"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateUserlogin" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "login": "${#Project#login}"
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="JsonPath Match" id="063d29bb-3d61-43f1-aa78-3d26dde1b6d9" name="ErrorMessageAssertion"><con:configuration><path>message</path><content>Login Name can not be changed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="139ef5f8-52a3-4e4d-a43d-dc22b8f456dd" name="Valid HTTP Status Codes"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="01a0373e-7e95-431d-9868-9dbbb9ee5e53" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateTokenExpiresInMinutes" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="008ec4eb-87c6-4347-8658-7814997a7d02"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="GenerateRandomProperties" id="3c45eafc-0b70-4b6e-8d21-057fdb122976"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 3 )
def ExpiresTimeInMinutes = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "ExpiresTimeInMinutes", ExpiresTimeInMinutes )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateExpiresTimeInMinutes" id="150bab64-2215-4ca2-80be-3b5edac2b240"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateExpiresTimeInMinutes" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "login": "${#Project#login}",
    "blocked": false,
    "tokenExpirationTime": "${#Project#ExpiresTimeInMinutes}",
    "sessMgmtFlag": true,
    "sessMultiFlag": true
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a8f3d703-5231-4ff5-b8f0-b858840a2208" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="805881fd-0de5-4ee3-8281-e495f60d7925" name="tokenExpirationTimeAssertion"><con:configuration><path>tokenExpirationTime</path><content>${#Project#ExpiresTimeInMinutes}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedUserDetails" id="4b6c8e98-3a34-46f0-8461-1dd8aa0093db"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="GetUserByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedUserDetails" id="4fecdd76-3279-4666-a9b6-65624dae03b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58aa9782cae5f70004f44cc5</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="926545e7-24f8-40db-8329-b9995cccd652" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f09c786-438b-4ff7-9916-77361134cd39" name="tokenExpirationTimeAssertion"><con:configuration><path>tokenExpirationTime</path><content>${#Project#ExpiresTimeInMinutes}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteUserID" id="acbf4842-d4f7-4e05-bbee-75a36077f746"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteUserID" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58a43c7c918e420004a4d124</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b75fc01-3058-4ec3-bf8b-323e9e1381d8" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d6a001d2-6561-42ee-b769-89e306a90a77" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateBlockedValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="3b2b6b26-f110-4b5d-916b-fa1438ab32f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="f55f855f-72e3-4886-bdf1-4bb66fe7b945" disabled="true"><con:settings/><con:config><script>def blocked = if("blocked": true) { 
   set "blocked": false
} else{ 
   set "blocked": true
}
testRunner.testCase.testSuite.project.setPropertyValue( "blocked", blocked )
</script></con:config></con:testStep><con:testStep type="groovy" name="generateRandomProperties" id="4e2b2239-5d24-41c3-ab57-a975cc58932d" disabled="true"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 3 )
def ExpiresInMinutes = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "ExpiresInMinutes", ExpiresInMinutes )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateBlockedValue" id="cbcfe6e7-08ed-4246-bd03-a7ad4041cfef"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateBlockedValue" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "login": "${#Project#login}",
    "blocked": true
    
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a8f3d703-5231-4ff5-b8f0-b858840a2208" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f5d2aea7-35ba-41fd-a2b2-345b56fc6073" name="BlockedValueAssertion"><con:configuration><path>blocked</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetUpdatedBlockedValue" id="eb476cfe-c91b-4d02-ad13-7b1eedffebf4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUpdatedBlockedValue" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58aaa469cae5f70004f44d21</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d911b117-6c4c-4aa8-90fb-7762830a28d6" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6d8c56a1-91db-4fd2-b1b7-c50e09773c89" name="UpdatedBlockedValueAssertion "><con:configuration><path>blocked</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteUserID" id="7d467c82-39cc-427a-9ca9-95a7c2f96fde"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteUserID" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58a43c7c918e420004a4d124</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b75fc01-3058-4ec3-bf8b-323e9e1381d8" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e2d96ba1-4daa-4f1a-bc7d-07d4452b97cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateMultipleSessionsValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="eb7c47b9-bb08-4cbb-bebd-d42b92e69378"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="generateRandomProperties" id="2a285dac-6467-4fc6-aef7-6a3aaf73261a" disabled="true"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 3 )
def ExpiresInMinutes = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "ExpiresInMinutes", ExpiresInMinutes )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMultipleSessionsValue" id="36c0a7f2-6089-4d68-8b94-2dc6c84ea5c1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMultipleSessionsValue" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "login": "${#Project#login}",
    "sessMultiFlag": false
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a8f3d703-5231-4ff5-b8f0-b858840a2208" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fdfd85e2-381f-4d4a-abea-70d1dcf220bf" name="MultipleSessionsAssertion"><con:configuration><path>sessMultiFlag</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="bd1e20bb-68ee-4e54-95ff-a3c4b572f15c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>MultipleSessionsFlag</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateMultipleSessionsValue</con:sourceStep><con:sourcePath>sessMultiFlag</con:sourcePath><con:targetType>sessionMultiFlag</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetMultipleSessionsUpdatedValue" id="d3de357b-e1c0-4137-ac9b-b52ecc88d17a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetMultipleSessionsUpdatedValue" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58ad3f8cb20a3500043eb17c</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="151e0a27-a171-4e33-832c-dbd5c10c1dc3" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="41bc4f41-38e1-4770-9dc6-3ec58222f997" name="sessionMultiFlagAssertion"><con:configuration><path>sessMultiFlag</path><content>${#Project#sessionMultiFlag}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteUserID" id="1d660573-4a5f-42d2-a6b3-29f95d3455c5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteUserID" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58a43c7c918e420004a4d124</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b75fc01-3058-4ec3-bf8b-323e9e1381d8" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="eb7b8af7-c4b6-4589-89e2-6d0cdb4805eb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateSessionsManagementValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="6d245988-930c-44cf-b349-83c493242df1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )</script></con:config></con:testStep><con:testStep type="groovy" name="generateRandomProperties" id="c7cfd6a6-5612-4b63-9c13-00f675e6adef" disabled="true"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('0'..'9')).join(), 3 )
def ExpiresInMinutes = randomValue

testRunner.testCase.testSuite.project.setPropertyValue( "ExpiresInMinutes", ExpiresInMinutes )
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSessionsManagementValue" id="501026bd-1517-4721-a94d-c7630c289aa0"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSessionsManagementValue" id="b588c1e8-4cbd-4468-b1a2-24850d8983bb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
    "org": "${#Project#orgId}",
    "login": "${#Project#login}",
    "blocked": false,
    "tokenExpirationTime": "${#Project#ExpiresInMinutes}",
    "sessMgmtFlag": false
    
}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a8f3d703-5231-4ff5-b8f0-b858840a2208" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="9a34da00-81cc-41ba-a99d-cbc0f77a784d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SessionManagementFlag</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>UpdateSessionsManagementValue</con:sourceStep><con:sourcePath>sessMgmtFlag</con:sourcePath><con:targetType>sessionMgmtFlag</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetSessionsmanagementUpdatedValue" id="090a82c6-e09d-489a-87cd-092081c9fcab"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="UpdateUserDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSessionsmanagementUpdatedValue" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58ad3f8eb20a3500043eb17d</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="151e0a27-a171-4e33-832c-dbd5c10c1dc3" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="41bc4f41-38e1-4770-9dc6-3ec58222f997" name="SessionManagementFlagAssertion"><con:configuration><path>sessMgmtFlag</path><content>${#Project#sessionMgmtFlag}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteUserID" id="2d347ec7-40cc-479c-9c7a-dbba853e1bd1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteUserID" id="42ec8b44-9b27-4313-9405-83259a861b2e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58a43c7c918e420004a4d124</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="3b75fc01-3058-4ec3-bf8b-323e9e1381d8" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="58751019-031e-4fd6-9865-44cf68a29dd6" name="Settings-MyAccount-GetUserDetails"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3047c9b1-0093-4473-ae08-f893d5fb2687" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetCurrentUserDetails" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="ad224ff4-3830-4b3f-bd02-907f1edac4b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="GetCurrentUserDetails" id="c57342c1-a61e-49ef-baa1-8d884907a6d3"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/Myaccount" methodName="GetMyAccountDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCurrentUserDetails" id="4fecdd76-3279-4666-a9b6-65624dae03b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/Myaccount</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66557c06-5f1f-47c0-a0af-023690caf6fb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="17d898c7-c814-41f0-8777-89d7636c4925" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAllUsersDetails" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="1c690dbb-e387-4684-a313-69280da10e99"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="GetAllUserDetails" id="c02fbf2d-d1f4-463e-bdeb-8a26acc5c831"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users" methodName="GetAllUsers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAllUserDetails" id="4fbcd755-50c2-42d1-be95-db67412b3a21" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="222a45e0-7761-4970-bbae-401a07bc954b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9a924862-f636-46d6-9e79-0a5f7499f924" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserByID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="CallingCreateUser" id="811884a5-e743-4f3d-8058-826203cdd443"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["Settings-Users-CreateUser"].testCases["CreateUser"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason</script></con:config></con:testStep><con:testStep type="restrequest" name="GetUserByID" id="90673b88-540b-44fd-826b-0b935a4bdbd4"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/users/${#Project#userid}" methodName="GetUserByID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUserByID" id="4fecdd76-3279-4666-a9b6-65624dae03b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/users/58a5143b387ab40004a16de0</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bac5614b-2dfe-40f8-ba94-4307b05187f3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateChangePassword" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="CallingLogin" id="928ff388-b789-4a7a-9683-013568c6a427"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["validateLogin"].testCases["validLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="restrequest" name="ValidateChangePassword" id="9e6b3a30-0a87-47a4-b02b-b6cce9d38eda"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/reset-password" methodName="ResetPassword" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ValidateChangePassword" id="d090079a-d5fc-429a-8b2b-56d6d329f0ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username":"Starbucks/APITesting","emailid":"Cmangalapalli@rythmos.com"}</con:request><con:assertion type="Valid HTTP Status Codes" id="93323f80-16a1-4847-bfd9-620ae3d40db1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="ec84fb7f-23eb-4e46-aabb-2f7334734e10" name="Rules"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2806fc80-cb05-4bec-bd9d-5df1ccdde749" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Copy of CallingLogin" id="29d7a7a6-4146-4517-8868-811c954035a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
def tc = testRunner.testCase.testSuite.project.testSuites["ValidateLogin"].testCases["ValidLoginCredentials"]

def runner = tc.run( null, false )
assert runner.status != Status.FAILED : runner.reason
</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Request" id="c871de96-ec87-4dcc-91df-e9251c35f311"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/rules/587da40e44d8ea5d32e80fdd" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="3ece83b4-8d21-4374-813b-476c53fa7f53" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/rules</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="6f096bd8-0e6e-447f-a010-e1d5d20ad785"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>rule1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>REST Request</con:sourceStep><con:sourcePath>.conditions.logicJSON</con:sourcePath><con:targetType>test</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>test</con:name><con:value>[]</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="aa8521db-aa12-4a8a-a438-773152c8ef99" name="ValidateStatusCodes"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="51c343c7-5db9-4a10-accb-a00ab7fef0c2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StatusCode200" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="94006b2e-4323-4fb6-967a-84721fba2fe5"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/login" methodName="Login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username":"${#Project#userName}", "password":"${#Project#password}"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4059bd0b-8023-4d8f-bf20-d6beb1a8b4ee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="debc67ea-bae1-445a-9357-81d84ed7e8a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StatusCode201" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateRandomProperties" id="dff7b743-67c9-448e-ba1d-caac26a1185d"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMembers" id="334393af-7e95-4c19-af7c-e58904f0c5dd"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMembers" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
   "enrollChannel": "Web",
   "enrollSource": "Campaign 1",
   "status": "Active",
   "program": "${#Project#programId}",
   "type": "Individual",
   "firstName": "${#Project#firstName}",
   "lastName": "${#Project#lastName}",
   "acquisitionChannel": "Web",
   "loyaltyIDs": [   {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
      
   }
   ]
   }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="c88fda29-1b93-4789-abe6-ca0baaaa67d2" name="FirstNameAssertion"><con:configuration><path>firstName</path><content>${#Project#firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c88fda29-1b93-4789-abe6-ca0baaaa67d2" name="LastNameAssertion"><con:configuration><path>lastName</path><content>${#Project#lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="785e2158-24d4-436c-9eb6-f1bededdc6cc" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9b162a62-421d-446b-b0d2-df43d24cfd1d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StatusCode204" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateRandomProperties" id="c5dc6ffd-d519-48cd-a109-c7c6078cfd1a"><con:settings/><con:config><script>def fn ="FN-"
def ln ="LN-"


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def firstName = fn+randomValue
randomValue = generator( (('A'..'Z')+('0'..'9')+('a'..'z')).join(), 5 )
def lastName = ln+randomValue

def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)

testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
testRunner.testCase.testSuite.project.setPropertyValue( "firstName", firstName )
testRunner.testCase.testSuite.project.setPropertyValue( "lastName", lastName )

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateMembers" id="ff6b8f2e-78f8-4f72-813e-0ed6e5060ee1"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="CreateMembers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMembers" id="73f874d6-7036-441c-b8e1-e91ba6f39a88" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{
   "enrollChannel": "Web",
   "enrollSource": "Campaign 1",
   "status": "Active",
   "program": "${#Project#programId}",
   "type": "Individual",
   "firstName": "${#Project#firstName}",
   "lastName": "${#Project#lastName}",
   "acquisitionChannel": "Web",
   "loyaltyIDs": [   {
      "name": "Membership Card",
      "code": "${#Project#loyaltycode}"
      
   }
   ]
   }</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members</con:originalUri><con:assertion type="JsonPath Match" id="c88fda29-1b93-4789-abe6-ca0baaaa67d2" name="FirstNameAssertion"><con:configuration><path>firstName</path><content>${#Project#firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c88fda29-1b93-4789-abe6-ca0baaaa67d2" name="LastNameAssertion"><con:configuration><path>lastName</path><content>${#Project#lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="785e2158-24d4-436c-9eb6-f1bededdc6cc" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Properties" id="8280043f-ffb0-4745-9f8e-f40e436a8974"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>MemberID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateMembers</con:sourceStep><con:sourcePath>_id</con:sourcePath><con:targetType>memberId</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMember" id="dabd5ed9-aab2-468a-bc16-c5a1c1cbd97a"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members/${#Project#memberId}" methodName="DeleteMember" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMember" id="d3fcbd7d-af3d-47dd-8c05-5d568e59a487" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/members/58b410331a470e0004ecec37</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df439242-d3b5-4d74-94e6-8f596142911b" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>randomNumber</con:name><con:value>p3f24WK2DXaGWJT</con:value></con:property><con:property><con:name>firstName</con:name><con:value>JJDBFKXJMLDWMQG</con:value></con:property></con:properties></con:testCase><con:testCase id="91020d9b-a07c-45e6-871f-54a7c037e8fc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StatusCode401" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="InvalidCredentials" id="7cdde7ad-283f-4691-8913-e2c5bf9bbd90"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/login" methodName="Login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="InvalidCredentials" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username": "Starbucks/admin", "password": "123456/"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:assertion type="JsonPath Match" id="75c80745-1c88-4ff7-92b2-f50d9415ca30" name="JsonPath Match"><con:configuration><path>.status</path><content>[401]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="InvalidURL" id="cae43069-9a1c-49b2-870f-494663c4adbd"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/InvalidUrl" methodName="InvalidUrl" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="InvalidURL" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username": "Starbucks/admin", "password": "123456"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:assertion type="JsonPath Match" id="d6d4367d-dc67-4a8c-8c85-2f467d73a3d8" name="JsonPath Match"><con:configuration><path>.status</path><content>[401]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ExpiredTokenID" id="06903fc9-3e69-4242-bc14-d1d1e4700e78"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/programs" methodName="Programs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ExpiredTokenID" id="42e3456c-b050-4ce1-9a09-5ba8dc680dec" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVMGV3YjA4aGZNTEJwN1JlOGVrdXp5aDNVRnlHSHRvMlp6ck9rL2ZuQks2ZWFNTS9MSU9YUGwvakErL3pYeGY1VHp5d3ZQYTRwZUlFTmdIVUxqUFluSmtqeGRVMDNJNjUzQWhsdUt0YjdTanI0SWdiMnhvZW5QQnVaWkkzZ3l4Rkh0dzRiR3BFVnJlVW9XajJJK21HcmpqNnhaNTRYMEhObHBuKzBiL0RYcUNjOFE9PSIsImV4cCI6MTQ4NDc1MTk4ODI1OCwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaSIsImlhdCI6MTQ4NDcyMzE4OH0.r3dKOuqwF-WPrFzja_dpy4hIdh-J7407re8BYpQNcGI" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/programs</con:originalUri><con:assertion type="JsonPath Match" id="028b0f5e-da9d-4df6-8eaf-3bc9477d35d8" name="JsonPath Match"><con:configuration><path>message</path><content>This user token is expired.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Body" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Body</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ef00d5ac-40bd-4d2f-ad11-9df3f8c3eebc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StatusCode404" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="cca4e9c0-adcb-4827-b108-a1d902b5806c"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/login" methodName="Login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="aaed8a90-67c5-490d-b8d6-e268858adb45" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request>{"username":"${#Project#userName}", "password":"${#Project#password}"}</con:request><con:originalUri>https://test-rle-api.herokuapp.com/api/v1/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransferToken" id="bffd0955-8779-43dd-886a-3a339a650e33"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>tokenID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>.token</con:sourcePath><con:targetType>tokenID</con:targetType><con:targetStep>#Project#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="FormatingToken" id="d62b4889-86d8-457b-9dbf-2b6c605194ac"><con:settings/><con:config><script>def testCaseProperty = testRunner.testCase.testSuite.project.getPropertyValue( "tokenid" )
def newTokenID = testCaseProperty.substring(1,testCaseProperty.length()-1)
log.info("Token Formated : "+newTokenID)
testRunner.testCase.testSuite.project.setPropertyValue( "tokenid", newTokenID )
def loyaltyCode =  new Random().with {(1..8).collect { (('A'..'Z')+('0'..'9')).join()[ nextInt( (('A'..'Z')+('0'..'9')).join().length() ) ] }.join()}
log.info("Loyalty Code Formated : "+loyaltyCode)
testRunner.testCase.testSuite.project.setPropertyValue( "loyaltyCode", loyaltyCode )
</script></con:config></con:testStep><con:testStep type="restrequest" name="ServiceUnavailable" id="a8118414-1ec7-48bc-bd02-dc485c161d8e"><con:settings/><con:config service="https://test-rle-api.herokuapp.com" resourcePath="/api/v1/members" methodName="StatusCode404" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceUnavailable" id="1999b22d-3792-41fd-9486-457c5243fb75" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#Project#tokenID}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://test-rle-api.herokuapp.com</con:endpoint><con:request/><con:originalUri>https://test-rle-api.herokuapp.com/StatusCode503</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>tokenID</con:name><con:value>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVMGV3YjA4aGZNTEI5dWdNOXV3aG5DNThVVjNTR1lscE8yNll3LzdzQks2ZWFNTS9MSU9YUGwvakErL3pYeGY1VHp5d3ZQYTRwZUlFTmxDSWZEVGRrOG9senRRMWlJbnFnMVF4N3Z0UzVpanI0SWdiMnhvZW5QQnVaWkkzZ3l4Rkh0dzRiR3BFVnJlVW9XajJJK21HcmpqNnhaNTRYMEhObHBuKzBiL0RYcUNkOFE9PSIsImV4cCI6MTQ5MzEyNTI5NzkzNSwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaSIsImlhdCI6MTQ5MzA5NjQ5N30.P4cHfsj0Nsn-T9K7s4XHFADtaRq4YW9LqthCE7CZ3QY</con:value></con:property><con:property><con:name>memberId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">58fed833829db20004392db9</con:value></con:property><con:property><con:name>loyaltyCode</con:name><con:value>G3YE9XNT</con:value></con:property><con:property><con:name>createdAt</con:name><con:value>2017-04-25T05:01:39.790Z</con:value></con:property><con:property><con:name>firstName</con:name><con:value>FN-HI6pv</con:value></con:property><con:property><con:name>lastName</con:name><con:value>LN-6oOHI</con:value></con:property><con:property><con:name>programName</con:name><con:value>prgvPmZK</con:value></con:property><con:property><con:name>programId</con:name><con:value>58fed833829db20004392db6</con:value></con:property><con:property><con:name>orgId</con:name><con:value>58f834f6e78d57209922a92b</con:value></con:property><con:property><con:name>emailID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cellPhone</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>zipCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>address</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cityName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>stateName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>countryName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>dob</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>name</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Program id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>dbURI</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>dbName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>memberType</con:name><con:value>Individual</con:value></con:property><con:property><con:name>addressValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>login</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>segmentName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>description</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>type</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>segmentid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>locationid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>email</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpiresTimeInMinutes</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>blocked</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sessionMgmtFlag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sessionMultiFlag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>locationName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>number</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>message</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>timezone</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>productName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cost</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>category</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>subcategory</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>style</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sku</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>productid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userName</con:name><con:value>Starbucks/admin</con:value></con:property><con:property><con:name>password</con:name><con:value>123456</con:value></con:property><con:property><con:name>programDesc</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rewardName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rewardid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rewardDesc</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>usesLeft</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expHours</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>uuid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>memRewardId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expiresOn</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rewardCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>pursePolicyID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>purseName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>purseDesc</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>purseExpHours</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>purseEscrowDays</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tierPolicyId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tierName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>levelName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>levelExpHours</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>desc</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>newLoyaltyCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>addLoyaltyCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>createMemberSuite</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>createMemberCase</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>loginSuite</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>loginCase</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>enrollSource</con:name><con:value>Campaign 1</con:value></con:property><con:property><con:name>enrollChannel</con:name><con:value>Web</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>